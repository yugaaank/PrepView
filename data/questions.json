[
  {
    "question_id": 1,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.",
    "expected_points": 3,
    "ideal_answer_outline": "Use binary search to find the target or the insertion point in O(log n) time. Handle edge cases like empty array or target outside the range.",
    "companies": [
      "Google",
      "Facebook",
      "Apple"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 8,
      "problem_solving": 7,
      "communication": 6
    }
  },
  {
    "question_id": 2,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Implement a function to find the first common ancestor of two nodes in a binary tree. Assume each node has a parent pointer.",
    "expected_points": 4,
    "ideal_answer_outline": "Traverse up from each node to their roots, storing parent pointers in a set. The first common node found when traversing up the second node's path is the ancestor. Time: O(h), Space: O(h).",
    "companies": [
      "Netflix",
      "Uber",
      "Airbnb"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 6,
      "problem_solving": 8,
      "communication": 4
    }
  },
  {
    "question_id": 3,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a non-empty array of integers, every element appears twice except for one. Find that single one.",
    "expected_points": 5,
    "ideal_answer_outline": "Use the XOR bitwise operator. The XOR of all numbers will result in the single non-repeating number. Time: O(n), Space: O(1).",
    "companies": [
      "Tesla",
      "SpaceX",
      "Stripe"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 9,
      "problem_solving": 6,
      "communication": 5
    }
  },
  {
    "question_id": 4,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Find all unique triplets in the array which gives the sum of zero.",
    "expected_points": 6,
    "ideal_answer_outline": "Sort the array. Iterate through each element and use a two-pointer approach to find the remaining two numbers. Skip duplicates to ensure unique triplets. Time: O(n^2).",
    "companies": [
      "Spotify",
      "Twitter",
      "LinkedIn"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 7,
      "problem_solving": 5,
      "communication": 8
    }
  },
  {
    "question_id": 5,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Design an algorithm to find the maximum sum subarray of a given array of integers.",
    "expected_points": 5,
    "ideal_answer_outline": "Use Kadane's algorithm. Iterate through the array, maintaining a current sum and a global max sum. If the current sum becomes negative, reset it to zero. Time: O(n), Space: O(1).",
    "companies": [
      "Oracle",
      "IBM",
      "Adobe"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 6,
      "problem_solving": 7,
      "communication": 6
    }
  },
  {
    "question_id": 6,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a set of non-overlapping intervals, insert a new interval into the set and merge if necessary.",
    "expected_points": 7,
    "ideal_answer_outline": "Iterate through the intervals, adding non-overlapping ones to the result list. Merge the new interval with any overlapping ones found. Append remaining intervals. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 7,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "You are given a list of courses that have prerequisites. Find a valid course order.",
    "expected_points": 6,
    "ideal_answer_outline": "Model the problem as a directed graph. Use topological sort (e.g., Kahn's algorithm or DFS) to find a valid order. Detect cycles to handle invalid inputs. Time: O(V + E).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 8,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a list of words, find the number of unique abbreviation combinations.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a trie data structure to store words. For each word, generate abbreviations recursively. Use a hash set to track unique abbreviations and count them. Time: O(k*2^w) where w is word length, Space: O(n*w).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 9,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of strings, group anagrams together.",
    "expected_points": 5,
    "ideal_answer_outline": "Create a canonical representation for each word (e.g., sorted string) and use a hash map to group words with the same canonical form. Time: O(n * k log k).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 10,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Design an algorithm for optimal stock trading. You are given an array of stock prices for each day. You can perform at most two transactions.",
    "expected_points": 9,
    "ideal_answer_outline": "Use dynamic programming. Create two arrays, one for max profit from a single transaction ending on day i, and one for max profit from a single transaction starting on day i. The total max profit is the sum of max profits from two transactions. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 11,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given an array of integers, find if the array contains any duplicates. Return true if there are duplicates, false otherwise.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a hash set to store encountered numbers. Iterate through the array; if a number is already in the set, return true. Otherwise, add it. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 12,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a list of airline tickets, find the itinerary in order.",
    "expected_points": 6,
    "ideal_answer_outline": "Model the problem as a graph where airports are vertices and tickets are directed edges. Use a DFS approach with a greedy strategy (lexicographical sorting of destinations) to find the Eulerian path. Backtrack if a path dead-ends. Time: O(E + V log V).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 13,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Find the smallest positive integer that does not occur in a given sequence.",
    "expected_points": 4,
    "ideal_answer_outline": "Filter out non-positive integers. Use a hash set or a boolean array to track positive integers present. Iterate from 1 to find the first missing number. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 14,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given an m x n 2D grid of characters and a string word, return true if word exists in the grid.",
    "expected_points": 8,
    "ideal_answer_outline": "Use backtracking or DFS. Start a search from each cell. At each cell, explore all four directions. Keep a visited array to avoid cycles. Time: O(m*n*4^L) where L is word length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 15,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of intervals, find the minimum number of intervals to remove to make the rest of the intervals non-overlapping.",
    "expected_points": 6,
    "ideal_answer_outline": "Sort intervals by their end points. Iterate through the sorted intervals, keeping track of the last non-overlapping end point. Count the number of non-overlapping intervals, and subtract from the total. Time: O(n log n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 16,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Write a function to implement a queue using two stacks.",
    "expected_points": 3,
    "ideal_answer_outline": "Maintain an 'inbox' and an 'outbox' stack. Enqueue by pushing to 'inbox'. Dequeue by moving elements from 'inbox' to 'outbox' if 'outbox' is empty, then popping from 'outbox'.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 17,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the maximum product subarray.",
    "expected_points": 5,
    "ideal_answer_outline": "Iterate through the array, keeping track of the max product and min product seen so far. At each step, update the max and min products, accounting for negative numbers. The global maximum is the answer. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 18,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given two strings, write a function to determine if they are anagrams of each other.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a hash map or an array to count character frequencies for both strings. Compare the counts. Alternative: sort both strings and compare. Time: O(n log n) for sort, O(n) for hash map.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 19,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a directed graph, find if there is a cycle.",
    "expected_points": 8,
    "ideal_answer_outline": "Use DFS. Maintain three sets for nodes: unvisited, visiting (in current recursion stack), and visited. If a node is found in the 'visiting' set, a cycle exists. Time: O(V + E).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 20,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Merge k sorted linked lists and return it as one sorted list.",
    "expected_points": 7,
    "ideal_answer_outline": "Use a min-heap to store the head nodes of all lists. Repeatedly extract the minimum node, add its value to the result list, and insert its next node into the heap. Time: O(N log k), where N is total nodes and k is number of lists.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 21,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to check if a string is a palindrome. The function should be case-insensitive and ignore non-alphanumeric characters.",
    "expected_points": 3,
    "ideal_answer_outline": "Use two pointers, one at the start and one at the end. Move them towards the center, skipping non-alphanumeric characters. Compare characters after converting to a consistent case.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 22,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Given a list of numbers and a number k, return whether any two numbers from the list add up to k.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a hash set to store seen numbers. Iterate through the list and for each number, check if its complement (k - number) exists in the set. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 23,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a simple LRU cache. Include get and put methods.",
    "expected_points": 5,
    "ideal_answer_outline": "Use a hash map for fast lookups and a doubly linked list to maintain the order of usage. The hash map stores key -> linked list node pointer. The linked list tracks recency.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 24,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Write a function that flattens a nested list of integers. For example, [1, [2, 3], [[4]]] becomes [1, 2, 3, 4].",
    "expected_points": 7,
    "ideal_answer_outline": "Use recursion or an iterative approach with a stack. If an element is an integer, add it to the result. If it's a list, recursively call the function or push its elements onto the stack. Handle variable nesting depth.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 25,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a thread pool with a fixed number of worker threads.",
    "expected_points": 6,
    "ideal_answer_outline": "Create a queue to hold tasks and a fixed number of threads. Each thread dequeues a task and executes it. Use locks or semaphores to handle concurrent access to the queue. Explain shutdown procedure.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 26,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to find the missing number in an array containing n distinct numbers taken from 0, 1, ..., n.",
    "expected_points": 3,
    "ideal_answer_outline": "Use the sum formula (n*(n+1)/2) and subtract the sum of the array's elements. Alternatively, use XOR: XOR all numbers from 0 to n and XOR all array elements. The result is the missing number. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 27,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a 'cat' command in C/C++ or a similar low-level language.",
    "expected_points": 8,
    "ideal_answer_outline": "Open the file. Read a chunk of data into a buffer. Write the buffer to standard output. Repeat until EOF. Handle file open errors, command-line arguments, and different file sizes.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 28,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Given two strings, write a function to check if one is a permutation of the other.",
    "expected_points": 4,
    "ideal_answer_outline": "Sort both strings and compare them. Or, use a character frequency count array/hash map for both strings and compare the counts. Time: O(n log n) or O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 29,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to remove duplicates from a sorted array in-place.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a two-pointer approach. One pointer iterates through the array, the other places unique elements. Overwrite duplicates. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 30,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a producer-consumer system using a fixed-size buffer. Use locks and condition variables to ensure thread safety.",
    "expected_points": 9,
    "ideal_answer_outline": "Producer thread adds items to a queue. Consumer thread removes items. Use a mutex for mutual exclusion and two condition variables: one to signal when the queue is not full and one for when it is not empty. Discuss spurious wakeups.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 31,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to reverse the words in a string. For example, 'hello world' becomes 'world hello'.",
    "expected_points": 4,
    "ideal_answer_outline": "Split the string into words. Reverse the array of words. Join the words back into a string. Handle multiple spaces and leading/trailing spaces.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 32,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Implement a function to find if a given string contains all unique characters.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a boolean array or hash set to track characters. Iterate through the string; if a character is already marked as seen, return false. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 33,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Design and implement a system to check for syntax errors in a simplified programming language. Support 'for', 'if', and 'return' statements, as well as balanced parentheses and braces.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a parser generator like ANTLR or write a recursive descent parser. Discuss syntax tree creation, tokenization, and validation of nested structures using a stack.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 34,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Given a binary tree, write a function to return its nodes in level-order traversal (i.e., from left to right, level by level).",
    "expected_points": 5,
    "ideal_answer_outline": "Use a queue for Breadth-First Search (BFS). Start with the root. While the queue is not empty, dequeue a node, add its value to the result, and enqueue its children. Use a marker or a counter for each level.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 35,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a program to generate the first n Fibonacci numbers.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a loop to iteratively calculate each number based on the sum of the two preceding ones. Handle base cases for n=0, 1. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 36,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a system for a high-traffic social media service to handle a 'like' button.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss database schema, using a dedicated service for 'likes', handling eventual consistency, caching 'like' counts, using a message queue for async updates to avoid blocking the main service. Handle race conditions and double-clicking.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 37,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a web crawler. How would you handle politeness, duplication, and scalability?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss a distributed architecture with a job queue, worker pool, and a politeness scheduler. Use a hash set or Bloom filter for URL de-duplication. Address the use of proxies, URL frontier, and storage of fetched content. Consider error handling.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 38,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a distributed key-value store. How would you handle data replication and consistency?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss consistent hashing for partitioning. Use a quorum-based replication model (N, W, R) for consistency. Explain vector clocks for conflict resolution. Mention gossip protocols for node discovery and failure detection. Use a write-ahead log for durability.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 39,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a chat application like WhatsApp. Focus on the messaging system and user presence.",
    "expected_points": 10,
    "ideal_answer_outline": "Use a WebSocket or persistent HTTP connection for real-time messaging. Discuss message queues for reliable delivery, message encryption (end-to-end), and handling offline messages. Detail user presence updates via heartbeats and pub/sub.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 40,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a video conference system. How would you handle peer-to-peer vs. server-based communication?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss WebRTC for peer-to-peer. For group calls, use a Selective Forwarding Unit (SFU) or Media Server (MCU). Address NAT traversal (STUN, TURN servers), video codec selection (VP9, H.264), and scalability. Mention a signaling server for session setup.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 41,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a distributed logging system. How would you ensure high availability and reliability?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss log collection agents, a message queue (Kafka), and a distributed data store (Elasticsearch). Mention log aggregation, parsing, and indexing. Address handling backpressure, monitoring, and fault tolerance.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 42,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a Google Drive-like file storage system. How would you handle concurrent access and versioning?",
    "expected_points": 7,
    "ideal_answer_outline": "Use a distributed file system like HDFS or S3. Discuss version control using timestamps or version IDs. Address concurrent writes with optimistic locking. Mention metadata storage in a distributed database and user permission management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 43,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online ticketing system for concerts. How would you prevent a race condition for ticket purchases?",
    "expected_points": 6,
    "ideal_answer_outline": "Use a message queue to serialize ticket purchase requests. Implement a database transaction with a lock on the ticket quantity. Discuss a separate service for seat reservation and expiration. Handle payment processing asynchronously.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 44,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a machine learning system to predict the price of a stock.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss data collection (historical prices, news), feature engineering, model selection (LSTMs, ARIMA), training pipeline, and deployment. Address backtesting, overfitting, and the non-deterministic nature of the stock market.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 45,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an API Gateway. What are its responsibilities?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss responsibilities: request routing, authentication, rate limiting, and caching. Mention its role in abstracting backend services. Detail how it improves security, management, and scalability for microservices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 46,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the difference between SQL and NoSQL databases. Give examples of when to use each.",
    "expected_points": 5,
    "ideal_answer_outline": "SQL: structured, relational, ACID properties (e.g., PostgreSQL, MySQL) - for complex queries, defined schema. NoSQL: unstructured, flexible schema, BASE properties (e.g., MongoDB, Cassandra) - for scalability, fast writes, big data.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 47,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the four pillars of OOP (Object-Oriented Programming). Provide a code example for each.",
    "expected_points": 6,
    "ideal_answer_outline": "Encapsulation: bundling data and methods. Abstraction: hiding implementation details. Inheritance: creating new classes from existing. Polymorphism: single interface for different types.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 48,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is the difference between a process and a thread? How do they communicate?",
    "expected_points": 7,
    "ideal_answer_outline": "Process: isolated, owns its memory space. Thread: lightweight, shares memory. Communication: IPC (pipes, message queues) for processes; shared memory, mutexes, condition variables for threads. Discuss context switching overhead.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 49,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain how a TCP connection is established and terminated. What is a SYN flood attack?",
    "expected_points": 5,
    "ideal_answer_outline": "Establishment: three-way handshake (SYN, SYN-ACK, ACK). Termination: four-way handshake (FIN, ACK, FIN, ACK). SYN flood: attacker sends SYN packets but never responds to SYN-ACK, leaving server resources tied up.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 50,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What are RESTful APIs? Name the core HTTP methods and their uses.",
    "expected_points": 4,
    "ideal_answer_outline": "REST: stateless, resource-based API architecture. HTTP methods: GET (retrieve), POST (create), PUT/PATCH (update), DELETE (delete).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 51,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of 'eventual consistency' in distributed systems.",
    "expected_points": 5,
    "ideal_answer_outline": "After a period with no new updates, all replicas of an object will converge to the same value. Explain the trade-off with strong consistency, use cases (social media, etc.), and how it relates to CAP theorem.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 52,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the difference between a monolith and a microservices architecture. When would you choose one over the other?",
    "expected_points": 8,
    "ideal_answer_outline": "Monolith: single, tightly-coupled application. Microservices: collection of small, independent services. Discuss pros (simplicity, easy deployment) and cons (tight coupling) of monoliths, and pros (scalability, technology freedom) and cons (complexity, operational overhead) of microservices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 53,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of a Bloom filter. How and when would you use one?",
    "expected_points": 6,
    "ideal_answer_outline": "A probabilistic data structure to test if an element is a member of a set. Discuss how it uses multiple hash functions and a bit array. It can have false positives but no false negatives. Use cases: preventing duplicate URLs in a web crawler, caching.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 54,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What is the difference between a shallow copy and a deep copy?",
    "expected_points": 3,
    "ideal_answer_outline": "Shallow copy: copies the top-level structure, but not nested objects. Deep copy: copies all nested objects recursively. Give a code example to demonstrate the difference.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 55,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of a distributed lock. How would you implement one using a distributed system?",
    "expected_points": 7,
    "ideal_answer_outline": "A mechanism to ensure that only one process can execute a piece of code at a time in a distributed environment. Discuss implementation using ZooKeeper, Redis, or a database with transactions. Address concerns like a 'stale' lock, deadlocks, and timeouts.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 56,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is a neural network? Explain the concepts of backpropagation and gradient descent.",
    "expected_points": 8,
    "ideal_answer_outline": "Neural network: a series of layers of interconnected nodes. Backpropagation: a method to calculate the gradient of the loss function with respect to the weights. Gradient descent: an optimization algorithm used to minimize the loss by iteratively adjusting the weights in the direction of the steepest descent.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 57,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Describe the different types of software testing and when you would use each.",
    "expected_points": 6,
    "ideal_answer_outline": "Unit testing: individual components. Integration testing: how components work together. End-to-end testing: user flow. Acceptance testing: business requirements. Performance testing: scalability and load. Regression testing: new code doesn't break old.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 58,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What is the difference between an inner join and a left outer join in SQL?",
    "expected_points": 3,
    "ideal_answer_outline": "Inner join: returns only rows that have matching values in both tables. Left outer join: returns all rows from the left table and the matched rows from the right table.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 59,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the concept of garbage collection. What are the different types of garbage collectors?",
    "expected_points": 7,
    "ideal_answer_outline": "Garbage collection: a form of automatic memory management. Discuss 'mark-and-sweep', 'copying', and 'generational' collectors. Mention 'stop-the-world' pauses and how they are mitigated.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 60,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain what a container is and the benefits of using them.",
    "expected_points": 5,
    "ideal_answer_outline": "A container is a lightweight, standalone, executable package of software that includes everything needed to run it. Benefits: portability, consistency across environments, resource efficiency, and simplified deployment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 61,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time when you were faced with a problem you couldn't solve on your own. What did you do?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: A specific technical challenge. Task: Your objective to solve it. Action: Describe how you sought help, consulted documentation, or collaborated with colleagues. Result: The successful resolution and what you learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 62,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a project you are most proud of. What was your specific contribution?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The project and its context. Task: Your role and responsibilities. Action: The key actions you took and technical decisions you made. Result: The measurable impact of your contribution and why it's a source of pride.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 63,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you received negative feedback. How did you handle it?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The context of the feedback. Task: Your initial reaction and goal. Action: The steps you took to understand and act on the feedback. Result: The positive change that resulted from the experience.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 64,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give me an example of a time when you had to work with a difficult stakeholder. How did you manage the relationship?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The stakeholder and the challenge. Task: Your objective for the relationship. Action: The specific communication strategies or compromises you made. Result: The positive outcome of your efforts.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 65,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a situation where you had to prioritize multiple projects with conflicting deadlines.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The projects and deadlines. Task: Your goal to manage them. Action: Your prioritization framework (e.g., impact vs. effort), communication with stakeholders. Result: The successful delivery of the projects.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 66,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to take on a task that was outside of your comfort zone.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: The new task. Task: Your goal to complete it. Action: How you approached learning, sought mentorship, and managed your time. Result: The successful completion and what new skills you gained.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 67,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you had to make a decision without all the information you needed.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The incomplete information. Task: The decision that needed to be made. Action: How you gathered additional information, made assumptions, and communicated the risk. Result: The outcome of your decision.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 68,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to deal with a conflict within your team.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The conflict and its cause. Task: Your role in resolving it. Action: The specific steps you took to mediate and find a resolution. Result: The positive outcome and how it improved team dynamics.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 69,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time when you influenced a technical decision without being the lead.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The technical decision. Task: Your goal to influence it. Action: The research you did, the data you presented, and the conversations you had. Result: The positive change that came from your influence.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 70,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you simplified a complex system or process.",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: The complex system. Task: Your objective to simplify it. Action: The specific steps you took to identify redundancies and streamline the process. Result: The measurable benefits of your simplification (e.g., improved performance, reduced effort).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 71,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you anticipated a problem before it happened and took action to prevent it.",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: The potential problem. Task: Your objective to prevent it. Action: The proactive steps you took to mitigate the risk. Result: The successful prevention of the issue and the impact it had.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 72,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you were forced to make a difficult trade-off on a project.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The trade-off. Task: Your goal to balance competing priorities. Action: The factors you considered, the stakeholders you consulted, and the final decision you made. Result: The outcome of the decision and lessons learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 73,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to teach a complex technical concept to a non-technical audience.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The complex concept and audience. Task: Your goal to communicate it effectively. Action: The methods you used (e.g., analogies, visual aids). Result: The audience's understanding and the project's success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 74,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time you demonstrated strong communication skills within a team.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: A communication challenge. Task: Your goal to improve communication. Action: The specific strategies you implemented (e.g., better documentation, regular updates). Result: A positive change in team collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 75,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you had to persuade someone to change their mind on a technical matter.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The disagreement. Task: Your goal to persuade. Action: The data, research, and collaborative discussions you used. Result: The change in opinion and the positive outcome for the project.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 76,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe your ideal team environment. What role do you typically play in a team?",
    "expected_points": 4,
    "ideal_answer_outline": "Discuss a culture of trust and open communication. Describe your role, whether it's a collaborator, problem-solver, or mentor. Provide a specific example of contributing to team success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 77,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle disagreements with a colleague on a technical decision?",
    "expected_points": 6,
    "ideal_answer_outline": "Focus on data and facts, not personal feelings. Discuss the importance of listening, understanding their perspective, and finding a consensus or a compromise. Provide a concrete example.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 78,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time you worked on a project where the team was underperforming. What did you do to help?",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on your contribution to improving the situation. Discuss how you identified the root cause, offered support, shared knowledge, or took on extra responsibilities to help the team succeed.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 79,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you ensure you are a productive and collaborative remote team member?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss proactive communication, clear documentation, regular check-ins, and being responsive. Provide examples of using tools and practices to stay connected and productive from a distance.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 80,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe a situation where you had to provide constructive criticism to a teammate. How did you do it?",
    "expected_points": 6,
    "ideal_answer_outline": "Focus on a specific, non-personal example. Discuss the importance of a private conversation, being specific with examples, and offering solutions. Mention how you ensured the feedback was well-received and acted upon.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 81,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time when you had to work with a team member who had a different work style than you.",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss your approach to understanding and adapting to different styles. Emphasize flexibility and communication. Provide an example of a successful collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 82,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you define technical leadership? Give an example of a time you demonstrated it.",
    "expected_points": 7,
    "ideal_answer_outline": "Technical leadership is not just about management, but about guiding a team to make sound technical decisions, mentoring, and setting an example. Give a specific example of leading a technical initiative, resolving a complex problem, or mentoring a junior team member.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 83,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time you had to make a decision that was unpopular with your team. How did you handle it?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss the process of making the decision, clearly communicating the rationale, and addressing the team's concerns. Show that you were able to lead them through the change and achieve a positive outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 84,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe a situation where you had to motivate a team that was feeling burnt out or unmotivated.",
    "expected_points": 8,
    "ideal_answer_outline": "Focus on how you identified the problem and took action. Discuss how you provided support, broke down tasks, celebrated small wins, or advocated for the team's well-being to management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 85,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you balance being a leader and a contributor? When is it appropriate to switch between roles?",
    "expected_points": 6,
    "ideal_answer_outline": "Acknowledge the balance. As a leader, you guide; as a contributor, you execute. Provide an example of a time you stepped in to write code or solve a problem to help the team meet a deadline, or when you stepped back to allow a team member to grow.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 86,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time you successfully delegated a complex task. How did you ensure it was completed correctly?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss the process of choosing the right person for the task, providing clear instructions and context, and offering support. Highlight the importance of trust and follow-up.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 87,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe a time you had to lead a technical discussion or a design review.",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your preparation, how you facilitated the discussion, and how you ensured all voices were heard. Mention how you guided the team to a consensus or a clear decision.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 88,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you handle a team member who is not performing well?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a private, direct, and empathetic approach. Focus on identifying the root cause of the performance issues, setting clear expectations, and providing support and a performance improvement plan.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 89,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you had to take ownership of a failing project.",
    "expected_points": 8,
    "ideal_answer_outline": "Focus on a specific, non-personal example. Discuss the process of diagnosing the problem, creating a new plan, communicating with stakeholders, and leading the team to a successful outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 90,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you foster an environment of continuous learning and growth within a team?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss encouraging new technologies, code reviews, knowledge sharing, and providing opportunities for professional development. Give a concrete example of a time you helped a team member grow their skills.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 91,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time you successfully resolved a conflict with a teammate or colleague.",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your approach to understanding the different perspectives, mediating, and finding a mutually agreeable solution. Focus on a specific situation and the positive outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 92,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where a team member takes credit for your work?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss a calm, professional approach. Focus on direct communication with the teammate first, and then, if necessary, with a manager. Emphasize a solution-oriented mindset rather than one of blame.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 93,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to mediate a dispute between two of your colleagues.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss your role as a neutral third party. Focus on listening to both sides, identifying the root cause, and guiding them to a solution. Mention how you maintained a positive team environment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 94,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you approach a situation where you disagree with a manager's decision?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a professional, respectful approach. Focus on understanding their rationale, presenting your own data-backed argument, and, if the decision stands, committing to it. Mention how you value open communication and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 95,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time when you had to defend a technical decision to a non-technical audience who was strongly against it.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss how you translated technical concepts into business terms. Use analogies and data to support your position. Mention how you addressed their concerns and built trust to achieve a consensus.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 96,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to deal with a team member who was not pulling their weight.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a private conversation with the team member. Focus on understanding the issue from their perspective and collaboratively creating a plan to improve performance. If the issue persists, mention involving a manager with a clear, factual summary.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 97,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where a stakeholder's requirements are constantly changing?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a proactive approach. Focus on clear communication, documenting changes, and managing expectations regarding scope and deadlines. Mention a structured process for handling change requests.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 98,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time when you had to work with a team with a toxic culture. What was your role in it?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss your ability to maintain professionalism and focus on your work. Mention how you tried to be a positive influence, offered support to colleagues, and, if necessary, escalated concerns to management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 99,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to deal with a difficult client or customer.",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on empathy and understanding their perspective. Discuss how you actively listened, de-escalated the situation, and worked to find a solution that met their needs while also being realistic.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 100,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where you and your team are blamed for a problem that was not your fault?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a calm, fact-based response. Focus on presenting a clear, objective account of events without blaming others. Mention a solution-oriented approach to fixing the problem, regardless of fault.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 101,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given a binary tree, write a function to return the average value of the nodes on each level.",
    "expected_points": 4,
    "ideal_answer_outline": "Use a breadth-first search (BFS) with a queue. For each level, calculate the sum and count of nodes, then find the average. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 102,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a system to handle billions of clickstream events. How would you analyze this data in real-time?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a streaming architecture using a message queue like Kafka, a stream processing engine like Flink, and a distributed data store like Cassandra or Hadoop. Address data ingestion, processing, and real-time dashboarding.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 103,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to implement a stack using an array.",
    "expected_points": 2,
    "ideal_answer_outline": "Use an array and a variable to track the 'top' of the stack. Implement push, pop, and peek operations. Explain how to handle dynamic resizing of the array if needed.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 104,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the concept of 'idempotence' in the context of distributed systems. Provide an example.",
    "expected_points": 7,
    "ideal_answer_outline": "An operation is idempotent if it can be applied multiple times without changing the result beyond the initial application. Example: a 'PUT' request is idempotent, a 'POST' is not. Discuss how it simplifies retries and failure handling.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 105,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a distributed search autocomplete system.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a distributed Trie or a T-Trie for storing prefixes. Address data partitioning, replication, and real-time updates. Mention a ranking system based on query frequency and recency. Use a CDN to cache results.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 106,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a simple garbage collector (mark-and-sweep).",
    "expected_points": 9,
    "ideal_answer_outline": "Implement two phases: Mark and Sweep. Mark: traverse from root objects, marking all reachable objects. Sweep: iterate through all objects and reclaim space for unmarked objects. Discuss the 'stop-the-world' issue.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 107,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "Explain the difference between a load balancer and a reverse proxy.",
    "expected_points": 4,
    "ideal_answer_outline": "Load balancer: distributes network traffic across multiple servers. Reverse proxy: a server that sits in front of a web server and forwards client requests. A load balancer is a type of reverse proxy. Explain their different purposes and features.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 108,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a ride-sharing service like Uber. Focus on surge pricing and driver-to-passenger matching.",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss geo-spatial indexing (Geohash or Quadtree) for finding nearby drivers. Address the matching algorithm based on proximity and rating. For surge pricing, detail a system that analyzes real-time supply and demand in specific geographic zones. Mention a feedback loop for driver incentives.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 109,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, rearrange it so that the numbers are alternating positive and negative, starting with a positive number.",
    "expected_points": 6,
    "ideal_answer_outline": "Partition the array into positive and negative numbers. Use two pointers, one for positive and one for negative, and swap elements in place until the alternating pattern is achieved. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 110,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a function to generate all permutations of a string.",
    "expected_points": 5,
    "ideal_answer_outline": "Use recursion with backtracking. For each position, try placing each character that has not been used yet. Mark characters as used and then backtrack. Use a boolean array or a set to track used characters.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 111,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain how a web browser works, from entering a URL to rendering a page.",
    "expected_points": 6,
    "ideal_answer_outline": "DNS lookup, TCP/IP handshake, HTTP request/response, parsing the HTML, CSS, and JS. Discuss the DOM tree, CSSOM tree, render tree, and the rendering process (layout, paint, compositing).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 112,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a system for a food delivery service like Uber Eats. Focus on the order flow and delivery tracking.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss microservices for order, restaurant, delivery, and user services. Use a message queue for order updates. Address real-time tracking with geofencing and push notifications. Detail the payment and tip processing flow.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 113,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given an array of integers, find the smallest subarray with a sum greater than a given value.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a sliding window approach. Maintain a 'start' and 'end' pointer. Expand the window by moving 'end' to include more elements until the sum is greater than the value. Then, contract the window from the 'start' to find the smallest length while maintaining the sum. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 114,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to flatten a single-level linked list.",
    "expected_points": 3,
    "ideal_answer_outline": "Traverse the linked list and change pointers so that each node points to the next. For simplicity, assume no nested lists.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 115,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is the difference between synchronous and asynchronous I/O? What are the benefits of each?",
    "expected_points": 7,
    "ideal_answer_outline": "Synchronous: blocking, program waits for I/O to complete. Asynchronous: non-blocking, program continues execution and is notified when I/O is done. Discuss use cases, performance, and programming paradigms (callbacks, promises, async/await).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 116,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a user authentication service for a distributed system.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss using JWTs (JSON Web Tokens) or session-based authentication. Detail a microservice that handles user registration, login, password hashing (bcrypt), and token validation. Address scalability, security concerns, and token revocation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 117,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given two strings, find if the second string is a rotation of the first. Example: 'waterbottle' and 'erbottlewat'.",
    "expected_points": 4,
    "ideal_answer_outline": "Concatenate the first string with itself. If the second string is a substring of the result, it's a rotation. Handle length and null checks. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 118,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to determine if a Sudoku board is valid.",
    "expected_points": 6,
    "ideal_answer_outline": "Use hash sets to check for duplicates in each row, column, and 3x3 sub-box. Iterate through the board once. Time: O(n^2), Space: O(n^2).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 119,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Find the shortest path in a weighted graph with non-negative edge weights from a source node to all other nodes.",
    "expected_points": 7,
    "ideal_answer_outline": "Use Dijkstra's algorithm. Maintain a min-priority queue to efficiently extract the node with the smallest distance. Relax edges by updating distances if a shorter path is found. Time: O(E log V).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 120,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Implement an algorithm to find the $k^{th}$ largest element in an unsorted array.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a min-heap of size k. Iterate through the array; if the current element is larger than the heap's root, pop the root and push the element. The root of the heap at the end is the answer. Alternative: QuickSelect algorithm for average O(n) performance.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 121,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a set of jobs and their deadlines and profits, find a schedule that maximizes total profit.",
    "expected_points": 9,
    "ideal_answer_outline": "Use a greedy approach. Sort jobs by profit in descending order. Iterate through the jobs, scheduling each one at the latest possible slot before its deadline. Use a disjoint set data structure to efficiently find available time slots. Time: O(n log n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 122,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Implement an algorithm to find the longest increasing subsequence.",
    "expected_points": 7,
    "ideal_answer_outline": "Use dynamic programming. Create an array `dp` where `dp[i]` is the length of the longest increasing subsequence ending at index i. Iterate and update `dp[i]` by checking all previous elements. Optimize to O(n log n) with binary search.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 123,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a 2D binary grid, find the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically.",
    "expected_points": 6,
    "ideal_answer_outline": "Use DFS or BFS. Iterate through each cell. If a '1' is found, increment the island count and start a traversal (DFS/BFS) to change all connected '1's to '0's to mark the island as visited. Time: O(m*n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 124,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Implement a function to find the longest common prefix string amongst an array of strings.",
    "expected_points": 4,
    "ideal_answer_outline": "Sort the array of strings. Compare the first and last strings character by character until a mismatch is found. The common characters before the mismatch form the longest common prefix. Time: O(n*L) where L is max length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 125,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to add two numbers represented as a linked list. The digits are stored in reverse order.",
    "expected_points": 5,
    "ideal_answer_outline": "Iterate through both lists simultaneously, adding corresponding digits and a carry. Create a new linked list to store the result. Handle carry-over and lists of different lengths.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 126,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a trie data structure for a dictionary. Include `insert`, `search`, and `startsWith` methods.",
    "expected_points": 8,
    "ideal_answer_outline": "Define a TrieNode class with a map for children and a flag for end-of-word. Implement recursive or iterative logic for each method. Discuss time complexity for each operation, which is O(L) where L is word length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 127,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to validate if a given string is a valid IPv4 address.",
    "expected_points": 6,
    "ideal_answer_outline": "Split the string by the '.' delimiter. Check if there are exactly four parts. For each part, ensure it's a number between 0 and 255 and has no leading zeros unless it's '0'.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 128,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a simple in-memory database with `get`, `set`, and `delete` operations. Include transaction support.",
    "expected_points": 7,
    "ideal_answer_outline": "Use a hash map for key-value storage. For transactions, use a transaction log (stack) to track changes. Implement `begin`, `commit`, and `rollback` logic. `Commit` applies changes, `rollback` reverts them.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 129,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a payment processing system. How would you ensure security and reliability?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a layered architecture with dedicated services for authentication, authorization, and payment gateways. Address security with tokenization, PCI compliance, and fraud detection. Mention using a message queue for async processing and idempotence for retries.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 130,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online multiplayer game matchmaking system.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a service that takes player requests, a scoring algorithm (e.g., ELO, Glicko) for skill rating, and a queueing system to group players. Address latency, fairness, and handling large player bases. Mention dedicated servers for game sessions.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 131,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design an object storage service like Amazon S3.",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss the use of a key-value store. Address data partitioning with consistent hashing and replication for durability. Mention eventual consistency, a metadata service for object properties, and a dedicated service for large file uploads (multipart uploads).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 132,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a real-time analytics dashboard for a web application.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a data pipeline using a message queue (Kafka), a stream processing engine (Flink, Spark Streaming), and a real-time data store (Druid, ClickHouse). Address data aggregation, indexing, and visualization. Mention handling high-volume, low-latency queries.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 133,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an email marketing platform. Focus on scheduling and deliverability.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss a distributed task scheduler to trigger email sending. Address rate limiting, bounce management, and feedback loops (opens, clicks). Mention a separate service for content rendering and a transactional database for campaign history.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 134,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "Explain the difference between a `left join`, `right join`, and `full outer join` in SQL.",
    "expected_points": 4,
    "ideal_answer_outline": "Left join: returns all rows from the left table and matched rows from the right. Right join: returns all rows from the right table and matched rows from the left. Full outer join: returns all rows from both tables, filling in nulls where there is no match. Use a simple diagram to illustrate.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 135,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "What is a race condition and how can you prevent it?",
    "expected_points": 6,
    "ideal_answer_outline": "A race condition occurs when multiple threads or processes access shared data and try to change it at the same time. Prevention: use synchronization primitives like mutexes, semaphores, or atomic operations. Discuss the importance of critical sections.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 136,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concepts of `map` and `reduce` in distributed computing.",
    "expected_points": 5,
    "ideal_answer_outline": "Map: processes a dataset and transforms it into a set of key-value pairs. Reduce: takes the output from `map` and aggregates it into a smaller set of key-value pairs. Use a word count example to illustrate the concepts and parallelization.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 137,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "What is `container orchestration` and why is it important?",
    "expected_points": 7,
    "ideal_answer_outline": "Container orchestration is the automated management of containers. Importance: automates deployment, scaling, networking, and availability. Mention tools like Kubernetes, Docker Swarm, and their benefits in modern software development.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 138,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the `CAP theorem` and how it relates to database selection.",
    "expected_points": 8,
    "ideal_answer_outline": "The CAP theorem states that a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance. Discuss the trade-offs: CP (HBase) prioritizes consistency, AP (Cassandra) prioritizes availability. Mention how this guides the choice of a database for a specific use case.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 139,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time you had to deal with a team member who was not contributing effectively. What did you do?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: A team member's performance was affecting the project. Task: Your goal was to address the issue professionally. Action: How you initiated a private conversation, offered support, and communicated with your manager if needed. Result: The outcome, whether it was improved performance or a change in team dynamics.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 140,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you took a risk that didn't pay off. What did you learn?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: You took a calculated risk on a project. Task: Your objective was to achieve a specific outcome. Action: The steps you took and the factors you considered. Result: The outcome was a failure, but you learned a valuable lesson about risk assessment or project planning.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 141,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you received difficult feedback. How did you react?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The context of the difficult feedback. Task: Your goal was to understand and act on it professionally. Action: How you processed the feedback, sought clarification, and created a plan to improve. Result: The positive change that came from the experience.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 142,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle a situation where a teammate is struggling to meet their commitments?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss a proactive, supportive approach. Focus on identifying the issue early, offering help or resources, and communicating with the team to re-prioritize tasks. Mention an example of a successful outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 143,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe a time you had to work with a team with a different cultural background. What did you learn?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your approach to cultural awareness and empathy. Focus on how you adapted your communication style and learned from their perspective. Mention an example of a successful project outcome and how it was enriched by the different backgrounds.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 144,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "What's the most effective way you've communicated a technical issue to a non-technical audience?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss an example where you simplified a complex issue using analogies, visuals, or a clear summary. Focus on the outcome of the communication, such as a stakeholder making a good business decision based on your explanation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 145,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time you mentored a junior developer. What was your approach?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss your strategy for mentorship, such as setting clear goals, providing regular feedback, and giving them ownership of a project. Mention the positive growth you saw in the junior developer and the impact it had on the team.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 146,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe a time you had to make a tough decision that affected your team. How did you handle it?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a specific scenario, like a change in project scope or a difficult trade-off. Focus on how you communicated the decision, addressed the team's concerns, and led them to a successful outcome. Mention the importance of transparency and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 147,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a disagreement with a manager?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a professional, respectful approach. Focus on understanding their perspective, presenting your argument with data and facts, and, if the decision stands, committing to it. Mention how you value open communication and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 148,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you successfully negotiated a difficult situation.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss a specific situation where you had to negotiate with a stakeholder or colleague. Focus on your preparation, your negotiation strategy, and how you found a solution that was beneficial to all parties. Mention the positive outcome and how it strengthened your relationships.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 149,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given a binary tree, find its minimum depth. Provide both recursive and iterative solutions.",
    "expected_points": 4,
    "ideal_answer_outline": "Recursive: DFS with min(left, right) + 1. Iterative: BFS with level counting. Time: O(n), Space: O(h).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 150,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given an integer array, return true if any value appears at least twice in the array, and return false if every element is distinct.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a hash set to store seen numbers. Iterate through the array; if a number is already in the set, return true. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 151,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of strings, group anagrams together.",
    "expected_points": 5,
    "ideal_answer_outline": "Create a canonical representation for each word (e.g., sorted string) and use a hash map to group words with the same canonical form. Time: O(n * k log k).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 152,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers `nums` and an integer `k`, return the $k^{th}$ largest element in the array.",
    "expected_points": 6,
    "ideal_answer_outline": "Use a min-heap of size `k`. Iterate through the array and maintain the heap. The top element of the heap will be the answer. Time: O(n log k).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 153,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an `m x n` matrix, if an element is 0, set its entire row and column to 0. Do it in place.",
    "expected_points": 5,
    "ideal_answer_outline": "Use the first row and column as markers. Iterate through the matrix, if a cell is 0, mark its corresponding row and column. In a second pass, set rows and columns to 0 based on markers. Time: O(m*n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 154,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Implement an algorithm to find the longest palindromic substring in a given string.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a dynamic programming approach or expand around center. The DP solution fills a table to track palindromes. The expand around center approach is more efficient, with O(n^2) time complexity.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 155,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the pair of elements that sums to a specific target.",
    "expected_points": 4,
    "ideal_answer_outline": "Use a hash set to store elements seen so far. Iterate through the array; for each number, check if the complement (target - number) is in the set. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 156,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a sorted array and an integer, find the index of the integer in the array. If not found, return the index where it would be if it were inserted in order.",
    "expected_points": 3,
    "ideal_answer_outline": "Use binary search. The algorithm will either find the target or it will terminate with a low pointer pointing to the insertion point.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 157,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a list of airline tickets, find the itinerary in order.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a graph-based approach. Model airports as nodes and tickets as directed edges. Use DFS to find an Eulerian path. Use a hash map to represent the adjacency list for quick lookup. Time: O(V+E).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 158,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a linked list, reverse it in-place.",
    "expected_points": 4,
    "ideal_answer_outline": "Iterate through the list, changing each node's next pointer to point to the previous node. Keep track of the previous and current nodes. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 159,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, determine if it is a valid binary search tree (BST).",
    "expected_points": 6,
    "ideal_answer_outline": "Use a recursive in-order traversal. Keep track of a previous value, and ensure the current node's value is greater than the previous. Or, use a recursive approach that passes min and max bounds to child nodes.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 160,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a 2D binary matrix, find the largest square containing only 1's and return its area.",
    "expected_points": 9,
    "ideal_answer_outline": "Use dynamic programming. Let `dp[i][j]` be the side length of the largest square with `(i,j)` as its bottom-right corner. The value is `min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1` if the current cell is 1. Time: O(m*n), Space: O(m*n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 161,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the number of subarrays with sum equal to a target value.",
    "expected_points": 6,
    "ideal_answer_outline": "Use a hash map to store the cumulative sum of the array and the number of times it has occurred. Iterate through the array, and for each element, check if the complement (current_sum - target) exists in the hash map. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 162,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given a string, find the first non-repeating character in it and return its index. If it does not exist, return -1.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a hash map to store character counts. Make a first pass to populate the counts, and a second pass to find the first character with a count of 1. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 163,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a dictionary and a string, find if the string can be segmented into a space-separated sequence of one or more dictionary words.",
    "expected_points": 8,
    "ideal_answer_outline": "Use dynamic programming. Let `dp[i]` be true if the substring `s[0...i-1]` can be segmented. The recurrence relation is `dp[i] = dp[j] && s[j...i-1] in dict` for all `j < i`. Time: O(n^2).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 164,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to remove all instances of a given value from an array in-place and return the new length.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a two-pointer approach. One pointer iterates through the array, the other only advances when a non-target element is found, effectively overwriting target elements. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 165,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a simple LRU cache. Include `get` and `put` methods.",
    "expected_points": 5,
    "ideal_answer_outline": "Use a hash map for O(1) lookups and a doubly linked list for O(1) updates to recency. The hash map stores key to node pointers in the linked list.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 166,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to implement a stack using two queues.",
    "expected_points": 5,
    "ideal_answer_outline": "Use one queue for data and a temporary queue. To `push`, enqueue to the data queue. To `pop`, dequeue all but the last element to the temp queue, then dequeue the last element from the data queue. Swap queues.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 167,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a custom memory allocator. Include `malloc` and `free` functionality.",
    "expected_points": 9,
    "ideal_answer_outline": "Manage a pool of memory. For `malloc`, use a block management strategy like 'first-fit' or 'best-fit' to find a free block. For `free`, add the block back to the list and merge it with adjacent free blocks to avoid fragmentation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 168,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to implement a hash map from scratch. Use open addressing or chaining to handle collisions.",
    "expected_points": 7,
    "ideal_answer_outline": "Define a hash function. Use an array for buckets. For chaining, each bucket holds a linked list. For open addressing, use linear or quadratic probing. Discuss the importance of a good hash function and handling resizing.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 169,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a multithreaded web server that handles concurrent requests.",
    "expected_points": 10,
    "ideal_answer_outline": "Use a thread pool. A main thread listens for connections, and when a connection arrives, it assigns the request to a worker thread from the pool. Discuss thread safety, resource management, and handling I/O.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 170,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to find if two binary trees are identical.",
    "expected_points": 4,
    "ideal_answer_outline": "Use recursion. Check if both trees are null. If not, check if their values are equal and recursively call the function on their left and right subtrees. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 171,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to check if a string of parentheses, braces, and brackets is valid and balanced.",
    "expected_points": 5,
    "ideal_answer_outline": "Use a stack. Iterate through the string; push opening brackets onto the stack. When a closing bracket is found, pop from the stack and check for a match. The stack must be empty at the end.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 172,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to find the maximum sum of a non-adjacent subsequence.",
    "expected_points": 6,
    "ideal_answer_outline": "Use dynamic programming. Let `dp[i]` be the maximum sum up to index `i`. The recurrence relation is `dp[i] = max(dp[i-1], dp[i-2] + nums[i])`. Handle base cases. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 173,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a simple version of a search engine's ranking algorithm. Assume you have a set of documents and a query.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss an inverted index data structure. Use TF-IDF (Term Frequency-Inverse Document Frequency) or BM25 to score document relevance to a query. Mention ranking based on this score and a simple pagerank-like score.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 174,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function that flattens a nested list of integers. For example, [1, [2, 3], [[4]]] becomes [1, 2, 3, 4].",
    "expected_points": 6,
    "ideal_answer_outline": "Use recursion. Define a helper function that checks if an element is an integer or a list. If it's a list, recursively call the function. Time: O(n), where n is the total number of elements.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 175,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to rotate an array to the right by `k` steps.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a temporary array. Copy elements from the original array to the new positions in the temp array. Then copy back. Or, reverse the entire array, then reverse the first k elements, then reverse the remaining elements. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 176,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a simple in-memory database with `get`, `set`, `delete`, and transaction support.",
    "expected_points": 9,
    "ideal_answer_outline": "Use a hash map for key-value storage. For transactions, use a command stack to track changes. `BEGIN` creates a new transaction scope. `COMMIT` applies changes to the main store. `ROLLBACK` reverts changes by popping from the stack.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 177,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a live streaming service like Twitch or YouTube Live. How would you handle low latency and high concurrency?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a client-side encoder. Use RTMP/WebRTC for ingestion and HLS/DASH for delivery. Address content delivery networks (CDNs), edge servers, and a scalable architecture for handling millions of concurrent viewers. Mention chat, authentication, and moderation services.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 178,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online education platform. Focus on the course content delivery and student progress tracking.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a microservice architecture. Use a content service for videos and documents, and a user service for progress. Mention using a database for course metadata and a distributed cache for user progress. Address video encoding and secure content delivery.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 179,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a system for real-time fraud detection in financial transactions.",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a streaming architecture with a data ingestion layer (Kafka). Use a stream processor (Flink, Storm) to apply a rule engine and machine learning models in real-time. Address low latency, false positive rate, and the feedback loop for model retraining.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 180,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a distributed key-value store. How would you handle data replication and consistency?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss consistent hashing for partitioning. Use a quorum-based replication model (N, W, R) for consistency. Explain vector clocks for conflict resolution. Mention gossip protocols for node discovery and failure detection. Use a write-ahead log for durability.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 181,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a Google Drive-like file storage system. How would you handle concurrent access and versioning?",
    "expected_points": 7,
    "ideal_answer_outline": "Use a distributed file system like HDFS or S3. Discuss version control using timestamps or version IDs. Address concurrent writes with optimistic locking. Mention metadata storage in a distributed database and user permission management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 182,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a system for managing a user's calendar with events and reminders.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss a microservice architecture. Use a scalable database for events, and a separate service for reminders. Address time zones, recurring events, and a notification system using a message queue. Mention a distributed scheduler for cron-like jobs.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 183,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a URL shortening service like bit.ly. How would you handle custom URLs and analytics?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss base62 encoding for generating short URLs. Use a database for mapping long URLs to short ones. Address caching for popular URLs, rate limiting, and an analytics pipeline for tracking clicks. Mention handling URL collisions.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 184,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a scalable web newsfeed system. How would you generate personalized feeds for millions of users?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss fan-out approaches (fan-out on write vs. fan-out on read). Use a message queue for distributing posts. Address a timeline service for feed generation and a caching layer for performance. Mention a ranking algorithm for personalization.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 185,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a simple stock trading system. Focus on order management and execution.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a request-response model for placing orders. Use a matching engine to match buy and sell orders. Address a database for order history, a message queue for real-time updates, and a separate service for portfolio management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 186,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a payment processing system. How would you ensure security and reliability?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a layered architecture with dedicated services for authentication, authorization, and payment gateways. Address security with tokenization, PCI compliance, and fraud detection. Mention using a message queue for async processing and idempotence for retries.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 187,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a real-time analytics dashboard for a web application.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a data pipeline using a message queue (Kafka), a stream processing engine (Flink, Spark Streaming), and a real-time data store (Druid, ClickHouse). Address data aggregation, indexing, and visualization. Mention handling high-volume, low-latency queries.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 188,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a simple authentication service for a distributed system.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss using JWTs (JSON Web Tokens) or session-based authentication. Detail a microservice that handles user registration, login, password hashing (bcrypt), and token validation. Address scalability, security concerns, and token revocation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 189,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a video on demand (VOD) service like Netflix. How would you handle video streaming and content delivery?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss content ingestion and transcoding into multiple formats and bitrates. Address adaptive bitrate streaming (HLS, MPEG-DASH) and using a CDN. Mention a recommendation engine, user profiles, and a scalable database for content metadata.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 190,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a distributed cron job scheduler.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss a central scheduler that stores job configurations in a database. Address worker nodes that pull jobs from a queue. Mention fault tolerance, leader election for the scheduler, and a distributed lock to ensure jobs are run exactly once.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 191,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "Explain the difference between a `left join`, `right join`, and `full outer join` in SQL.",
    "expected_points": 4,
    "ideal_answer_outline": "Left join: returns all rows from the left table and matched rows from the right. Right join: returns all rows from the right table and matched rows from the left. Full outer join: returns all rows from both tables, filling in nulls where there is no match. Use a simple diagram to illustrate.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 192,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "What is a race condition and how can you prevent it?",
    "expected_points": 6,
    "ideal_answer_outline": "A race condition occurs when multiple threads or processes access shared data and try to change it at the same time. Prevention: use synchronization primitives like mutexes, semaphores, or atomic operations. Discuss the importance of critical sections.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 193,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concepts of `map` and `reduce` in distributed computing.",
    "expected_points": 5,
    "ideal_answer_outline": "Map: processes a dataset and transforms it into a set of key-value pairs. Reduce: takes the output from `map` and aggregates it into a smaller set of key-value pairs. Use a word count example to illustrate the concepts and parallelization.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 194,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "What is `container orchestration` and why is it important?",
    "expected_points": 7,
    "ideal_answer_outline": "Container orchestration is the automated management of containers. Importance: automates deployment, scaling, networking, and availability. Mention tools like Kubernetes, Docker Swarm, and their benefits in modern software development.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 195,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the `CAP theorem` and how it relates to database selection.",
    "expected_points": 8,
    "ideal_answer_outline": "The CAP theorem states that a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance. Discuss the trade-offs: CP (HBase) prioritizes consistency, AP (Cassandra) prioritizes availability. Mention how this guides the choice of a database for a specific use case.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 196,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the difference between `stateful` and `stateless` services. Provide an example of each.",
    "expected_points": 6,
    "ideal_answer_outline": "Stateless: does not store session information (e.g., API gateway). Stateful: stores session information (e.g., a database, a cache). Discuss how stateless services are easier to scale.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 197,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the `ACID` properties of a database transaction. Provide an example of a violation of each.",
    "expected_points": 8,
    "ideal_answer_outline": "Atomicity (all or nothing), Consistency (valid state), Isolation (transactions don't interfere), Durability (persisted changes). Give a banking transaction example to illustrate.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 198,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What are the key differences between `concurrency` and `parallelism`?",
    "expected_points": 4,
    "ideal_answer_outline": "Concurrency is the ability to handle multiple tasks at the same time, but they may not be executing simultaneously. Parallelism is the ability to execute multiple tasks simultaneously. Use a cooking analogy to explain the difference.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 199,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the `SOLID` principles of object-oriented design. Provide a brief explanation for each principle.",
    "expected_points": 7,
    "ideal_answer_outline": "Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion. Briefly explain what each principle means and its importance for software design.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 200,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of `sharding` in databases. What are the different sharding strategies?",
    "expected_points": 6,
    "ideal_answer_outline": "Sharding is a method for horizontal scaling by splitting a large database into smaller, more manageable parts. Strategies: hash-based, range-based, and directory-based. Discuss the pros and cons of each.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 201,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to deal with an uncooperative coworker. How did you handle it?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: A specific instance with a difficult coworker. Task: Your goal was to complete the project. Action: Describe how you approached them professionally, listened to their concerns, and found a resolution. Result: The positive outcome of the situation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 202,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a project you are most proud of that had a very tight timeline. How did you ensure timely delivery?",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: A project with a challenging deadline. Task: Your objective was to deliver it on time. Action: The steps you took, such as prioritizing tasks, communicating with stakeholders, and working efficiently. Result: The successful delivery and the lessons learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 203,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time when you had to make a decision without all the necessary information.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: An incomplete information scenario. Task: A decision was needed. Action: How you gathered information, made assumptions, and communicated the risk to stakeholders. Result: The outcome of your decision and what you learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 204,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had a setback or a failed project. What did you learn from it?",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: A project that did not go as planned. Task: Your objective was to learn from the failure. Action: How you analyzed what went wrong, took responsibility, and implemented changes. Result: The lessons learned and how they have made you a better engineer.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 205,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a situation where you had to change your approach to a problem halfway through. Why did you change?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: A project where the initial approach was not working. Task: Your objective was to find a new solution. Action: How you identified the issue, communicated the change to your team, and implemented the new plan. Result: The successful completion of the project and the benefits of the new approach.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 206,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you ensure effective communication within a remote team?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss using communication tools, setting clear expectations for response times, and using clear, concise language. Mention a specific example of a successful remote collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 207,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe your approach to code reviews. What makes a good code review?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss the importance of a positive and collaborative tone. Focus on providing actionable feedback, not just finding flaws. Mention reviewing for code style, logic, and potential bugs. Provide a specific example of a helpful code review you've given or received.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 208,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle a situation where a teammate is not pulling their weight? What is your role?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a proactive, supportive approach. Focus on a private, direct conversation to understand the issue. Mention offering help or resources, and communicating with the team to re-prioritize tasks. If the issue persists, mention involving a manager with a clear, factual summary.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 209,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time you helped a teammate succeed. What was your role?",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on a specific scenario where you provided support or guidance. Mention how you helped them overcome a technical challenge or learn a new skill. Discuss the positive outcome for the team and the teammate's growth.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 210,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle disagreements on technical issues within a team?",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on a data-driven approach. Discuss the importance of listening, understanding their perspective, and finding a consensus or a compromise. Mention using a whiteboard or a proof of concept to reach a shared understanding. Provide a concrete example.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 211,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time you had to step up and take the lead on a project without a formal title. What was the outcome?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a specific scenario. Focus on how you took initiative, coordinated with team members, and kept the project on track. Mention how you motivated the team and the successful outcome of the project.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 212,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you mentor a junior engineer? Describe your approach to their growth.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss your strategy for mentorship, such as setting clear goals, providing regular feedback, and giving them ownership of a project. Mention the positive growth you saw in the junior engineer and the impact it had on the team.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 213,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe a time you had to make a tough decision that affected your team. How did you handle it?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a specific scenario, like a change in project scope or a difficult trade-off. Focus on how you communicated the decision, addressed the team's concerns, and led them to a successful outcome. Mention the importance of transparency and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 214,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you motivate a team that is facing a difficult challenge or a setback?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss how you identified the problem and took action. Mention how you broke down the problem into smaller tasks, celebrated small wins, and provided support. Give a concrete example of a time you successfully motivated a team.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 215,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe your leadership style. How does it change based on the situation?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your primary leadership style (e.g., servant, democratic). Mention a time when you had to adapt your style to a specific situation, such as a crisis or a new project. Provide a specific example of a successful outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 216,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had a disagreement with a manager. How did you resolve it?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss a professional, respectful approach. Focus on understanding their perspective, presenting your argument with data and facts, and, if the decision stands, committing to it. Mention how you value open communication and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 217,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where you are blamed for a mistake you didn't make?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a calm, fact-based response. Focus on presenting a clear, objective account of events without blaming others. Mention a solution-oriented approach to fixing the problem, regardless of fault.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 218,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to give difficult feedback to a colleague.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss a private conversation with the colleague. Focus on being specific with examples, and offering solutions. Mention how you ensured the feedback was well-received and acted upon.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 219,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you approach a situation where you have conflicting priorities with another team?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a proactive approach. Focus on clear communication, understanding their goals, and finding a solution that meets both teams' needs. Mention an example of a successful resolution that benefited both teams.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 220,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to mediate a conflict between two of your colleagues.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss your role as a neutral third party. Focus on listening to both sides, identifying the root cause, and guiding them to a solution. Mention how you maintained a positive team environment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 221,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Find the longest consecutive sequence of integers in an unsorted array.",
    "expected_points": 6,
    "ideal_answer_outline": "Use a hash set to store all elements for O(1) lookups. Iterate through the array; for each number, check if it's the start of a sequence (i.e., `num-1` is not in the set). If so, count the consecutive elements. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 222,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Implement an algorithm to find the maximum flow in a network. Assume you have a source and a sink node.",
    "expected_points": 9,
    "ideal_answer_outline": "Use the Ford-Fulkerson algorithm. Continuously find an augmenting path from the source to the sink in the residual graph using BFS or DFS. The sum of the capacities of all augmenting paths is the maximum flow. Time: O(E*F) where F is max flow, or O(V*E^2) with Edmonds-Karp.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 223,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of intervals, merge all overlapping intervals and return the result.",
    "expected_points": 6,
    "ideal_answer_outline": "Sort the intervals by their start time. Iterate through the sorted intervals, merging if the current interval overlaps with the previous one. Time: O(n log n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 224,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a directed acyclic graph (DAG), find the longest path.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a topological sort. For each node, calculate the longest path to it by taking the max of the longest paths to its predecessors. Time: O(V+E).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 225,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Find all subsets of a given set.",
    "expected_points": 5,
    "ideal_answer_outline": "Use backtracking or a bit manipulation approach. For backtracking, recursively generate subsets by either including or excluding each element. For bit manipulation, iterate from 0 to 2^n - 1, and each number's binary representation corresponds to a unique subset.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 226,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a simple HTTP server that can handle GET and POST requests. Do not use an external framework.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a socket to listen for connections. In a loop, accept connections and read the HTTP request. Parse the method and path. Based on the method, send a valid HTTP response. Handle different content types. Mention handling multiple concurrent requests with threading or async I/O.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 227,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a simplified version of Google's Protocol Buffers (protobuf). Write a function to serialize and deserialize a simple object.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss the encoding scheme (e.g., varint, zigzag encoding). Implement functions to read and write different data types from/to a byte stream. Mention the trade-offs in terms of size and performance compared to JSON.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 228,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to implement a queue using two stacks.",
    "expected_points": 3,
    "ideal_answer_outline": "Maintain an 'inbox' and an 'outbox' stack. Enqueue by pushing to 'inbox'. Dequeue by moving elements from 'inbox' to 'outbox' if 'outbox' is empty, then popping from 'outbox'.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 229,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to generate all possible combinations of a string.",
    "expected_points": 6,
    "ideal_answer_outline": "Use recursion and backtracking. For each position, either include the character or not. The base case is when the string is fully processed. Store unique combinations in a hash set.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 230,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a simple `grep` command. The program should search for a pattern in a given file and print the lines that contain the pattern.",
    "expected_points": 8,
    "ideal_answer_outline": "Read the file line by line. For each line, use a string search algorithm (e.g., naive search, Boyer-Moore, KMP) to find the pattern. If found, print the line. Mention handling edge cases like large files and different file encodings.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 231,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a system for managing a user's calendar with events and reminders.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a microservice architecture. Use a scalable database for events, and a separate service for reminders. Address time zones, recurring events, and a notification system using a message queue. Mention a distributed scheduler for cron-like jobs.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 232,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design an online multiplayer game matchmaking system.",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a service that takes player requests, a scoring algorithm (e.g., ELO, Glicko) for skill rating, and a queueing system to group players. Address latency, fairness, and handling large player bases. Mention dedicated servers for game sessions.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 233,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a system for a food delivery service like Uber Eats. Focus on the order flow and delivery tracking.",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss microservices for order, restaurant, delivery, and user services. Use a message queue for order updates. Address real-time tracking with geofencing and push notifications. Detail the payment and tip processing flow.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 234,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a system for a high-traffic social media service to handle a 'like' button.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss database schema, using a dedicated service for 'likes', handling eventual consistency, caching 'like' counts, using a message queue for async updates to avoid blocking the main service. Handle race conditions and double-clicking.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 235,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a distributed logging system. How would you ensure high availability and reliability?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss log collection agents, a message queue (Kafka), and a distributed data store (Elasticsearch). Mention log aggregation, parsing, and indexing. Address handling backpressure, monitoring, and fault tolerance.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 236,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is the difference between synchronous and asynchronous I/O? What are the benefits of each?",
    "expected_points": 7,
    "ideal_answer_outline": "Synchronous: blocking, program waits for I/O to complete. Asynchronous: non-blocking, program continues execution and is notified when I/O is done. Discuss use cases, performance, and programming paradigms (callbacks, promises, async/await).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 237,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain how a web browser works, from entering a URL to rendering a page.",
    "expected_points": 6,
    "ideal_answer_outline": "DNS lookup, TCP/IP handshake, HTTP request/response, parsing the HTML, CSS, and JS. Discuss the DOM tree, CSSOM tree, render tree, and the rendering process (layout, paint, compositing).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 238,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is a neural network? Explain the concepts of backpropagation and gradient descent.",
    "expected_points": 8,
    "ideal_answer_outline": "Neural network: a series of layers of interconnected nodes. Backpropagation: a method to calculate the gradient of the loss function with respect to the weights. Gradient descent: an optimization algorithm used to minimize the loss by iteratively adjusting the weights in the direction of the steepest descent.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 239,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "What is a `distributed transaction`? How do you handle it and what are the challenges?",
    "expected_points": 7,
    "ideal_answer_outline": "A transaction that involves multiple systems. Handling: two-phase commit, SAGA pattern. Challenges: atomicity, consistency, isolation, and durability across multiple services. Mention distributed locks.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 240,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "What are the key trade-offs in choosing a caching strategy?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss consistency vs. performance. Mention different strategies: cache-aside, write-through, write-back. Address cache invalidation, cache eviction policies (LRU, LFU), and handling cache stamps.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 241,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a situation where you had to prioritize multiple projects with conflicting deadlines.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The projects and deadlines. Task: Your goal to manage them. Action: Your prioritization framework (e.g., impact vs. effort), communication with stakeholders. Result: The successful delivery of the projects.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 242,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to take on a task that was outside of your comfort zone.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: The new task. Task: Your goal to complete it. Action: How you approached learning, sought mentorship, and managed your time. Result: The successful completion and what new skills you gained.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 243,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time when you influenced a technical decision without being the lead.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The technical decision. Task: Your goal to influence it. Action: The research you did, the data you presented, and the conversations you had. Result: The positive change that came from your influence.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 244,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you had to deal with a conflict within your team.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The conflict and its cause. Task: Your role in resolving it. Action: The specific steps you took to mediate and find a resolution. Result: The positive outcome and how it improved team dynamics.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 245,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to deliver difficult feedback to a colleague.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: Performance/behavior issue. Task: Feedback necessity. Action: Preparation, delivery approach. Result: Behavior change, relationship maintained.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 246,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle a situation where a team member takes credit for your work?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss a calm, professional approach. Focus on direct communication with the teammate first, and then, if necessary, with a manager. Emphasize a solution-oriented mindset rather than one of blame.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 247,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe a time you had to work with a team with a different cultural background. What did you learn?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your approach to cultural awareness and empathy. Focus on how you adapted your communication style and learned from their perspective. Mention an example of a successful project outcome and how it was enriched by the different backgrounds.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 248,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "What's the most effective way you've communicated a technical issue to a non-technical audience?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss an example where you simplified a complex issue using analogies, visuals, or a clear summary. Focus on the outcome of the communication, such as a stakeholder making a good business decision based on your explanation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 249,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a sorted array of integers, find the index of the first occurrence of a target element. If the element is not present, return -1. Use binary search and optimize for time complexity.",
    "expected_points": 5,
    "ideal_answer_outline": "Implement a binary search variation. When the target is found, continue searching in the left half to find the first occurrence. Time: O(log n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 250,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, find all root-to-leaf paths.",
    "expected_points": 6,
    "ideal_answer_outline": "Use a recursive DFS traversal. When a leaf node is reached, add the current path to the result. Use a list or array to store the path as the recursion unwinds. Time: O(n), Space: O(h).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 251,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a 2D matrix of characters and a word, find if the word exists in the grid. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring.",
    "expected_points": 8,
    "ideal_answer_outline": "Use backtracking (DFS) to search for the word. Start a DFS from each cell. The recursive function checks the current character and then explores all four adjacent cells. Use a visited set or modify the grid in-place to avoid re-visiting cells. Time: O(m*n*4^L) where L is word length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 252,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the maximum product subarray.",
    "expected_points": 6,
    "ideal_answer_outline": "Iterate through the array, keeping track of the current maximum and minimum products ending at the current position. Update these values at each step, considering the possibility of a negative number turning a minimum into a new maximum. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 253,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a list of words, find the longest word in the list that is a subsequence of a given string.",
    "expected_points": 7,
    "ideal_answer_outline": "Iterate through the list of words. For each word, check if it is a subsequence of the given string using a two-pointer approach. Keep track of the longest word found. Time: O(N*L) where N is number of words and L is string length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 254,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find all unique triplets in the array that sum to zero.",
    "expected_points": 6,
    "ideal_answer_outline": "Sort the array. Iterate through the array with a fixed pointer `i`, and use two pointers (`left` and `right`) to find the remaining two numbers. Skip duplicates to avoid repeated triplets. Time: O(n^2).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 255,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given two strings, write a function to determine if they are anagrams of each other.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a character frequency count array or hash map for both strings and compare the counts. An alternative is to sort both strings and compare them. Time: O(n) or O(n log n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 256,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, return its nodes in level-order traversal (i.e., from left to right, level by level).",
    "expected_points": 5,
    "ideal_answer_outline": "Use a queue for Breadth-First Search (BFS). Start with the root. While the queue is not empty, dequeue a node, add its value to the result, and enqueue its children. Use a marker or a counter for each level.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 257,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Find the shortest path in a weighted graph with non-negative edge weights from a source node to all other nodes.",
    "expected_points": 7,
    "ideal_answer_outline": "Use Dijkstra's algorithm. Maintain a min-priority queue to efficiently extract the node with the smallest distance. Relax edges by updating distances if a shorter path is found. Time: O(E log V).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 258,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a list of airline tickets, find the itinerary in order.",
    "expected_points": 6,
    "ideal_answer_outline": "Model the problem as a graph where airports are vertices and tickets are directed edges. Use a DFS approach with a greedy strategy (lexicographical sorting of destinations) to find the Eulerian path. Backtrack if a path dead-ends. Time: O(E + V log V).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 259,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to remove all instances of a given value from an array in-place and return the new length.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a two-pointer approach. One pointer iterates through the array, the other only advances when a non-target element is found, effectively overwriting target elements. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 260,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Given a list of numbers and a number k, return whether any two numbers from the list add up to k.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a hash set to store seen numbers. Iterate through the list and for each number, check if its complement (k - number) exists in the set. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 261,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a thread pool with a fixed number of worker threads.",
    "expected_points": 6,
    "ideal_answer_outline": "Create a queue to hold tasks and a fixed number of threads. Each thread dequeues a task and executes it. Use locks or semaphores to handle concurrent access to the queue. Explain shutdown procedure.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 262,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Write a function that flattens a nested list of integers. For example, `[1, [2, 3], [[4]]]` becomes `[1, 2, 3, 4]`.",
    "expected_points": 7,
    "ideal_answer_outline": "Use recursion or an iterative approach with a stack. If an element is an integer, add it to the result. If it's a list, recursively call the function or push its elements onto the stack. Handle variable nesting depth.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 263,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to reverse the words in a string. For example, 'hello world' becomes 'world hello'.",
    "expected_points": 4,
    "ideal_answer_outline": "Split the string into words. Reverse the array of words. Join the words back into a string. Handle multiple spaces and leading/trailing spaces.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 264,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to find the missing number in an array containing n distinct numbers taken from 0, 1, ..., n.",
    "expected_points": 3,
    "ideal_answer_outline": "Use the sum formula `(n*(n+1)/2)` and subtract the sum of the array's elements. Alternatively, use XOR: XOR all numbers from 0 to n and XOR all array elements. The result is the missing number. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 265,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a 'cat' command in C/C++ or a similar low-level language.",
    "expected_points": 8,
    "ideal_answer_outline": "Open the file. Read a chunk of data into a buffer. Write the buffer to standard output. Repeat until EOF. Handle file open errors, command-line arguments, and different file sizes.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 266,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Given two strings, write a function to check if one is a permutation of the other.",
    "expected_points": 4,
    "ideal_answer_outline": "Sort both strings and compare them. Or, use a character frequency count array/hash map for both strings and compare the counts. Time: O(n log n) or O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 267,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Implement a function to find if a given string contains all unique characters.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a boolean array or hash set to track characters. Iterate through the string; if a character is already marked as seen, return false. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 268,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Design and implement a system to check for syntax errors in a simplified programming language. Support 'for', 'if', and 'return' statements, as well as balanced parentheses and braces.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a parser generator like ANTLR or write a recursive descent parser. Discuss syntax tree creation, tokenization, and validation of nested structures using a stack.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 269,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a system for a high-traffic social media service to handle a 'like' button.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss database schema, using a dedicated service for 'likes', handling eventual consistency, caching 'like' counts, and a message queue for async updates to avoid blocking the main service. Handle race conditions and double-clicking.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 270,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a web crawler. How would you handle politeness, duplication, and scalability?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss a distributed architecture with a job queue, worker pool, and a politeness scheduler. Use a hash set or Bloom filter for URL de-duplication. Address the use of proxies, a URL frontier, and storage of fetched content. Consider error handling.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 271,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a distributed key-value store. How would you handle data replication and consistency?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss consistent hashing for partitioning. Use a quorum-based replication model (N, W, R) for consistency. Explain vector clocks for conflict resolution. Mention gossip protocols for node discovery and failure detection. Use a write-ahead log for durability.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 272,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a chat application like WhatsApp. Focus on the messaging system and user presence.",
    "expected_points": 10,
    "ideal_answer_outline": "Use a WebSocket or persistent HTTP connection for real-time messaging. Discuss message queues for reliable delivery, message encryption (end-to-end), and handling offline messages. Detail user presence updates via heartbeats and pub/sub.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 273,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a video conference system. How would you handle peer-to-peer vs. server-based communication?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss WebRTC for peer-to-peer. For group calls, use a Selective Forwarding Unit (SFU) or Media Server (MCU). Address NAT traversal (STUN, TURN servers), video codec selection (VP9, H.264), and scalability. Mention a signaling server for session setup.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 274,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a Google Drive-like file storage system. How would you handle concurrent access and versioning?",
    "expected_points": 7,
    "ideal_answer_outline": "Use a distributed file system like HDFS or S3. Discuss version control using timestamps or version IDs. Address concurrent writes with optimistic locking. Mention metadata storage in a distributed database and user permission management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 275,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online ticketing system for concerts. How would you prevent a race condition for ticket purchases?",
    "expected_points": 6,
    "ideal_answer_outline": "Use a message queue to serialize ticket purchase requests. Implement a database transaction with a lock on the ticket quantity. Discuss a separate service for seat reservation and expiration. Handle payment processing asynchronously.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 276,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a machine learning system to predict the price of a stock.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss data collection (historical prices, news), feature engineering, model selection (LSTMs, ARIMA), training pipeline, and deployment. Address backtesting, overfitting, and the non-deterministic nature of the stock market.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 277,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an API Gateway. What are its responsibilities?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss responsibilities: request routing, authentication, rate limiting, and caching. Mention its role in abstracting backend services. Detail how it improves security, management, and scalability for microservices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 278,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a system for real-time fraud detection in financial transactions.",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a streaming architecture with a data ingestion layer (Kafka). Use a stream processor (Flink, Storm) to apply a rule engine and machine learning models in real-time. Address low latency, false positive rate, and the feedback loop for model retraining.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 279,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the difference between SQL and NoSQL databases. Give examples of when to use each.",
    "expected_points": 5,
    "ideal_answer_outline": "SQL: structured, relational, ACID properties (e.g., PostgreSQL, MySQL) - for complex queries, defined schema. NoSQL: unstructured, flexible schema, BASE properties (e.g., MongoDB, Cassandra) - for scalability, fast writes, big data.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 280,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the four pillars of OOP (Object-Oriented Programming). Provide a code example for each.",
    "expected_points": 6,
    "ideal_answer_outline": "Encapsulation: bundling data and methods. Abstraction: hiding implementation details. Inheritance: creating new classes from existing. Polymorphism: single interface for different types.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 281,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is the difference between a process and a thread? How do they communicate?",
    "expected_points": 7,
    "ideal_answer_outline": "Process: isolated, owns its memory space. Thread: lightweight, shares memory. Communication: IPC (pipes, message queues) for processes; shared memory, mutexes, condition variables for threads. Discuss context switching overhead.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 282,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain how a TCP connection is established and terminated. What is a SYN flood attack?",
    "expected_points": 5,
    "ideal_answer_outline": "Establishment: three-way handshake (SYN, SYN-ACK, ACK). Termination: four-way handshake (FIN, ACK, FIN, ACK). SYN flood: attacker sends SYN packets but never responds to SYN-ACK, leaving server resources tied up.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 283,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What are RESTful APIs? Name the core HTTP methods and their uses.",
    "expected_points": 4,
    "ideal_answer_outline": "REST: stateless, resource-based API architecture. HTTP methods: GET (retrieve), POST (create), PUT/PATCH (update), DELETE (delete).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 284,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of 'eventual consistency' in distributed systems.",
    "expected_points": 5,
    "ideal_answer_outline": "After a period with no new updates, all replicas of an object will converge to the same value. Explain the trade-off with strong consistency, use cases (social media, etc.), and how it relates to CAP theorem.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 285,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the difference between a monolith and a microservices architecture. When would you choose one over the other?",
    "expected_points": 8,
    "ideal_answer_outline": "Monolith: single, tightly-coupled application. Microservices: collection of small, independent services. Discuss pros (simplicity, easy deployment) and cons (tight coupling) of monoliths, and pros (scalability, technology freedom) and cons (complexity, operational overhead) of microservices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 286,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of a Bloom filter. How and when would you use one?",
    "expected_points": 6,
    "ideal_answer_outline": "A probabilistic data structure to test if an element is a member of a set. Discuss how it uses multiple hash functions and a bit array. It can have false positives but no false negatives. Use cases: preventing duplicate URLs in a web crawler, caching.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 287,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What is the difference between a shallow copy and a deep copy?",
    "expected_points": 3,
    "ideal_answer_outline": "Shallow copy: copies the top-level structure, but not nested objects. Deep copy: copies all nested objects recursively. Give a code example to demonstrate the difference.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 288,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of a distributed lock. How would you implement one using a distributed system?",
    "expected_points": 7,
    "ideal_answer_outline": "A mechanism to ensure that only one process can execute a piece of code at a time in a distributed environment. Discuss implementation using ZooKeeper, Redis, or a database with transactions. Address concerns like a 'stale' lock, deadlocks, and timeouts.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 289,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is a neural network? Explain the concepts of backpropagation and gradient descent.",
    "expected_points": 8,
    "ideal_answer_outline": "Neural network: a series of layers of interconnected nodes. Backpropagation: a method to calculate the gradient of the loss function with respect to the weights. Gradient descent: an optimization algorithm used to minimize the loss by iteratively adjusting the weights in the direction of the steepest descent.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 290,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Describe the different types of software testing and when you would use each.",
    "expected_points": 6,
    "ideal_answer_outline": "Unit testing: individual components. Integration testing: how components work together. End-to-end testing: user flow. Acceptance testing: business requirements. Performance testing: scalability and load. Regression testing: new code doesn't break old.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 291,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What is the difference between an inner join and a left outer join in SQL?",
    "expected_points": 3,
    "ideal_answer_outline": "Inner join: returns only rows that have matching values in both tables. Left outer join: returns all rows from the left table and the matched rows from the right table.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 292,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the concept of garbage collection. What are the different types of garbage collectors?",
    "expected_points": 7,
    "ideal_answer_outline": "Garbage collection: a form of automatic memory management. Discuss 'mark-and-sweep', 'copying', and 'generational' collectors. Mention 'stop-the-world' pauses and how they are mitigated.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 293,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain what a container is and the benefits of using them.",
    "expected_points": 5,
    "ideal_answer_outline": "A container is a lightweight, standalone, executable package of software that includes everything needed to run it. Benefits: portability, consistency across environments, resource efficiency, and simplified deployment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 294,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time when you were faced with a problem you couldn't solve on your own. What did you do?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: Specific technical challenge. Task: Your objective to solve it. Action: Describe how you sought help, consulted documentation, or collaborated with colleagues. Result: The successful resolution and what you learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 295,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a project you are most proud of. What was your specific contribution?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The project and its context. Task: Your role and responsibilities. Action: The key actions you took and technical decisions you made. Result: The measurable impact of your contribution and why it's a source of pride.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 296,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you received negative feedback. How did you handle it?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: Honest feedback scenario. Task: Original objective. Action: What went wrong, recovery steps. Result: Specific learnings, how applied since.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 297,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give me an example of when you had to work with a difficult stakeholder. How did you manage the relationship?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The stakeholder and the challenge. Task: Your objective for the relationship. Action: The specific communication strategies or compromises you made. Result: The positive outcome of your efforts.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 298,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a situation where you had to prioritize multiple projects with conflicting deadlines.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: Multiple urgent tasks. Task: All deliverables. Action: Prioritization framework, communication. Result: All priorities addressed, stakeholder satisfaction.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 299,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to take on a task that was outside of your comfort zone.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: The new task. Task: Your goal to complete it. Action: How you approached learning, sought mentorship, and managed your time. Result: The successful completion and what new skills you gained.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 300,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you had to make a decision without all the information you needed.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The incomplete information scenario. Task: A decision was needed. Action: How you gathered information, made assumptions, and communicated the risk to stakeholders. Result: The outcome of your decision and what you learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 301,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to deal with a conflict within your team.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The conflict and its cause. Task: Your role in resolving it. Action: The specific steps you took to mediate and find a resolution. Result: The positive outcome and how it improved team dynamics.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 302,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time when you influenced a technical decision without being the lead.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The technical decision. Task: Your goal to influence it. Action: The research you did, the data you presented, and the conversations you had. Result: The positive change that came from your influence.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 303,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you simplified a complex system or process.",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: The complex system. Task: Your objective to simplify it. Action: The specific steps you took to identify redundancies and streamline the process. Result: The measurable benefits of your simplification.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 304,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you anticipated a problem before it happened and took action to prevent it.",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: The potential problem. Task: Your objective to prevent it. Action: The proactive steps you took to mitigate the risk. Result: The successful prevention of the issue and the impact it had.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 305,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you were forced to make a difficult trade-off on a project.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The trade-off. Task: Your goal to balance competing priorities. Action: The factors you considered, the stakeholders you consulted, and the final decision you made. Result: The outcome of the decision and lessons learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 306,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to teach a complex technical concept to a non-technical audience.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The complex concept and audience. Task: Your goal to communicate it effectively. Action: The methods you used (e.g., analogies, visual aids). Result: The audience's understanding and the project's success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 307,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time you demonstrated strong communication skills within a team.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: A communication challenge. Task: Your goal to improve communication. Action: The specific strategies you implemented (e.g., better documentation, regular updates). Result: A positive change in team collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 308,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you had to persuade someone to change their mind on a technical matter.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The disagreement. Task: Your goal to persuade. Action: The data, research, and collaborative discussions you used. Result: The change in opinion and the positive outcome for the project.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 309,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe your ideal team environment. What role do you typically play in a team?",
    "expected_points": 4,
    "ideal_answer_outline": "Discuss a culture of trust and open communication. Describe your role, whether it's a collaborator, problem-solver, or mentor. Provide a specific example of contributing to team success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 310,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle disagreements with a colleague on a technical decision?",
    "expected_points": 6,
    "ideal_answer_outline": "Focus on data and facts, not personal feelings. Discuss the importance of listening, understanding their perspective, and finding a consensus or a compromise. Provide a concrete example.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 311,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time you worked on a project where the team was underperforming. What did you do to help?",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on your contribution to improving the situation. Discuss how you identified the root cause, offered support, shared knowledge, or took on extra responsibilities to help the team succeed.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 312,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you ensure you are a productive and collaborative remote team member?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss proactive communication, clear documentation, regular check-ins, and being responsive. Provide examples of using tools and practices to stay connected and productive from a distance.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 313,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe a situation where you had to provide constructive criticism to a teammate. How did you do it?",
    "expected_points": 6,
    "ideal_answer_outline": "Focus on a specific, non-personal example. Discuss the importance of a private conversation, being specific with examples, and offering solutions. Mention how you ensured the feedback was well-received and acted upon.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 314,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time when you had to work with a team member who had a different work style than you.",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss your approach to understanding and adapting to different styles. Emphasize flexibility and communication. Provide an example of a successful collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 315,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle dependencies on other teams for your deliverables?",
    "expected_points": 6,
    "ideal_answer_outline": "Early identification, clear communication, SLAs, escalation paths, contingency planning, relationship building.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 316,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time when you had to work with a difficult team member.",
    "expected_points": 7,
    "ideal_answer_outline": "Professional approach, understanding root causes, direct communication, involving management when appropriate, maintaining productivity.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 317,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you ensure your team maintains high code quality standards?",
    "expected_points": 6,
    "ideal_answer_outline": "Code review process, automated testing, linting rules, pair programming, documentation standards, continuous improvement.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 318,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe how you've contributed to improving team productivity or efficiency.",
    "expected_points": 6,
    "ideal_answer_outline": "Problem identification, solution proposal, implementation, measurement of impact, team buy-in, sustainable practices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 319,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you led a project without formal authority.",
    "expected_points": 7,
    "ideal_answer_outline": "Influence strategies, building consensus, motivation techniques, delegation, accountability without authority, project success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 320,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you mentor junior developers on your team?",
    "expected_points": 6,
    "ideal_answer_outline": "Structured mentoring approach, goal setting, regular 1:1s, code reviews, growth opportunities, feedback delivery.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 321,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe a situation where you had to make a difficult technical decision with limited information.",
    "expected_points": 7,
    "ideal_answer_outline": "Risk assessment, gathering available data, consulting experts, decision framework, contingency planning, outcome evaluation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 322,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you drive technical innovation within your team?",
    "expected_points": 6,
    "ideal_answer_outline": "Creating safe spaces for experimentation, hackathons, POCs, staying current with trends, encouraging learning, celebrating failures.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 323,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you had to champion a controversial technical decision.",
    "expected_points": 7,
    "ideal_answer_outline": "Building the case, addressing concerns, stakeholder management, phased approach, success metrics, risk mitigation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 324,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you identify and develop future leaders in your team?",
    "expected_points": 7,
    "ideal_answer_outline": "Potential indicators, stretch assignments, coaching, feedback, sponsorship, succession planning, growth tracking.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 325,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe your approach to setting technical direction for a team or project.",
    "expected_points": 7,
    "ideal_answer_outline": "Vision alignment, architecture decisions, technology choices, team input, documentation, evolution strategy, buy-in process.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 326,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you had to lead through a crisis or major incident.",
    "expected_points": 8,
    "ideal_answer_outline": "Incident response, clear communication, delegation, stakeholder management, post-mortem, process improvements, team morale.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 327,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you balance technical excellence with business delivery pressures?",
    "expected_points": 7,
    "ideal_answer_outline": "Technical debt management, MVP approach, risk communication, negotiation, phased delivery, quality gates, stakeholder education.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 328,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe how you've built or transformed an engineering culture.",
    "expected_points": 8,
    "ideal_answer_outline": "Current state assessment, vision setting, change management, measuring progress, overcoming resistance, sustainable practices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 329,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time you successfully resolved a conflict with a teammate or colleague.",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your approach to understanding the different perspectives, mediating, and finding a mutually agreeable solution. Focus on a specific situation and the positive outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 330,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where a team member takes credit for your work?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss a calm, professional approach. Focus on direct communication with the teammate first, and then, if necessary, with a manager. Emphasize a solution-oriented mindset rather than one of blame.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 331,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to mediate a dispute between two of your colleagues.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss your role as a neutral third party. Focus on listening to both sides, identifying the root cause, and guiding them to a solution. Mention how you maintained a positive team environment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 332,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you approach a situation where you disagree with a manager's decision?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a professional, respectful approach. Focus on understanding their rationale, presenting your own data-backed argument, and, if the decision stands, committing to it. Mention how you value open communication and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 333,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time when you had to defend a technical decision to a non-technical audience who was strongly against it.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss how you translated technical concepts into business terms. Use analogies and data to support your position. Mention how you addressed their concerns and built trust to achieve a consensus.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 334,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to deal with a team member who was not pulling their weight.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a private conversation with the team member. Focus on understanding the issue from their perspective and collaboratively creating a plan to improve performance. If the issue persists, mention involving a manager with a clear, factual summary.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 335,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where a stakeholder's requirements are constantly changing?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a proactive approach. Focus on clear communication, documenting changes, and managing expectations regarding scope and deadlines. Mention a structured process for handling change requests.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 336,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time when you had to work with a team with a toxic culture. What was your role in it?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss your ability to maintain professionalism and focus on your work. Mention how you tried to be a positive influence, offered support to colleagues, and, if necessary, escalated concerns to management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 337,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to deal with a difficult client or customer.",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on empathy and understanding their perspective. Discuss how you actively listened, de-escalated the situation, and worked to find a solution that met their needs while also being realistic.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 338,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where you and your team are blamed for a problem that was not your fault?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a calm, fact-based response. Focus on presenting a clear, objective account of events without blaming others. Mention a solution-oriented approach to fixing the problem, regardless of fault.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 339,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you successfully negotiated a difficult situation.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss a specific situation where you had to negotiate with a stakeholder or colleague. Focus on your preparation, your negotiation strategy, and how you found a solution that was beneficial to all parties. Mention the positive outcome and how it strengthened your relationships.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 340,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the pair of elements that sums to a specific target.",
    "expected_points": 4,
    "ideal_answer_outline": "Use a hash set to store elements seen so far. Iterate through the array; for each number, check if the complement (target - number) is in the set. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 341,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an `m x n` matrix, if an element is 0, set its entire row and column to 0. Do it in place.",
    "expected_points": 5,
    "ideal_answer_outline": "Use the first row and column as markers. Iterate through the matrix, if a cell is 0, mark its corresponding row and column. In a second pass, set rows and columns to 0 based on markers. Time: O(m*n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 342,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, find its maximum depth. Provide both recursive and iterative solutions.",
    "expected_points": 5,
    "ideal_answer_outline": "Recursive: DFS with max(left, right) + 1. Iterative: BFS with level counting. Time: O(n), Space: O(h).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 343,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Given a binary tree, write a function to return its nodes in level-order traversal (i.e., from left to right, level by level).",
    "expected_points": 5,
    "ideal_answer_outline": "Use a queue for Breadth-First Search (BFS). Start with the root. While the queue is not empty, dequeue a node, add its value to the result, and enqueue its children. Use a marker or a counter for each level.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 344,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to implement a hash map from scratch. Use chaining to handle collisions.",
    "expected_points": 7,
    "ideal_answer_outline": "Define a hash function. Use an array for buckets. For chaining, each bucket holds a linked list. Discuss the importance of a good hash function and handling resizing. Operations are O(1) on average.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 345,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a producer-consumer system using a fixed-size buffer. Use locks and condition variables to ensure thread safety.",
    "expected_points": 9,
    "ideal_answer_outline": "Producer thread adds items to a queue. Consumer thread removes items. Use a mutex for mutual exclusion and two condition variables: one to signal when the queue is not full and one for when it is not empty. Discuss spurious wakeups.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 346,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a live streaming service like Twitch or YouTube Live. How would you handle low latency and high concurrency?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a client-side encoder. Use RTMP/WebRTC for ingestion and HLS/DASH for delivery. Address content delivery networks (CDNs), edge servers, and a scalable architecture for handling millions of concurrent viewers. Mention chat, authentication, and moderation services.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 347,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a scalable news feed system. How would you generate personalized feeds for millions of users?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss fan-out approaches (fan-out on write vs. fan-out on read). Use a message queue for distributing posts. Address a timeline service for feed generation and a caching layer for performance. Mention a ranking algorithm for personalization. Discuss the celebrity problem and how to handle it.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 348,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online education platform. Focus on the course content delivery and student progress tracking.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a microservice architecture. Use a content service for videos and documents, and a user service for progress. Mention using a database for course metadata and a distributed cache for user progress. Address video encoding and secure content delivery.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 349,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given a sorted array of integers, find the index of the first occurrence of a target element. If the element is not present, return -1. Use binary search and optimize for time complexity.",
    "expected_points": 5,
    "ideal_answer_outline": "Implement a binary search variation. When the target is found, continue searching in the left half to find the first occurrence. Time: O(log n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 350,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, find all root-to-leaf paths.",
    "expected_points": 6,
    "ideal_answer_outline": "Use a recursive DFS traversal. When a leaf node is reached, add the current path to the result. Use a list or array to store the path as the recursion unwinds. Time: O(n), Space: O(h).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 351,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a 2D matrix of characters and a word, find if the word exists in the grid. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring.",
    "expected_points": 8,
    "ideal_answer_outline": "Use backtracking (DFS) to search for the word. Start a DFS from each cell. The recursive function checks the current character and then explores all four adjacent cells. Use a visited set or modify the grid in-place to avoid re-visiting cells. Time: O(m*n*4^L) where L is word length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 352,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the maximum product subarray.",
    "expected_points": 6,
    "ideal_answer_outline": "Iterate through the array, keeping track of the current maximum and minimum products ending at the current position. Update these values at each step, considering the possibility of a negative number turning a minimum into a new maximum. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 353,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Given a list of words, find the longest word in the list that is a subsequence of a given string.",
    "expected_points": 7,
    "ideal_answer_outline": "Iterate through the list of words. For each word, check if it is a subsequence of the given string using a two-pointer approach. Keep track of the longest word found. Time: O(N*L) where N is number of words and L is string length.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 354,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find all unique triplets in the array that sum to zero.",
    "expected_points": 6,
    "ideal_answer_outline": "Sort the array. Iterate through the array with a fixed pointer `i`, and use two pointers (`left` and `right`) to find the remaining two numbers. Skip duplicates to avoid repeated triplets. Time: O(n^2).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 355,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Easy",
    "question": "Given two strings, write a function to determine if they are anagrams of each other.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a character frequency count array or hash map for both strings and compare the counts. An alternative is to sort both strings and compare them. Time: O(n) or O(n log n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 356,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, return its nodes in level-order traversal (i.e., from left to right, level by level).",
    "expected_points": 5,
    "ideal_answer_outline": "Use a queue for Breadth-First Search (BFS). Start with the root. While the queue is not empty, dequeue a node, add its value to the result, and enqueue its children. Use a marker or a counter for each level.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 357,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Hard",
    "question": "Find the shortest path in a weighted graph with non-negative edge weights from a source node to all other nodes.",
    "expected_points": 7,
    "ideal_answer_outline": "Use Dijkstra's algorithm. Maintain a min-priority queue to efficiently extract the node with the smallest distance. Relax edges by updating distances if a shorter path is found. Time: O(E log V).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 358,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a list of airline tickets, find the itinerary in order.",
    "expected_points": 6,
    "ideal_answer_outline": "Model the problem as a graph where airports are vertices and tickets are directed edges. Use a DFS approach with a greedy strategy (lexicographical sorting of destinations) to find the Eulerian path. Backtrack if a path dead-ends. Time: O(E + V log V).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 359,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to remove all instances of a given value from an array in-place and return the new length.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a two-pointer approach. One pointer iterates through the array, the other only advances when a non-target element is found, effectively overwriting target elements. Time: O(n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 360,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Given a list of numbers and a number k, return whether any two numbers from the list add up to k.",
    "expected_points": 2,
    "ideal_answer_outline": "Use a hash set to store seen numbers. Iterate through the list and for each number, check if its complement (k - number) exists in the set. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 361,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Implement a thread pool with a fixed number of worker threads.",
    "expected_points": 6,
    "ideal_answer_outline": "Create a queue to hold tasks and a fixed number of threads. Each thread dequeues a task and executes it. Use locks or semaphores to handle concurrent access to the queue. Explain shutdown procedure.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 362,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Write a function that flattens a nested list of integers. For example, `[1, [2, 3], [[4]]]` becomes `[1, 2, 3, 4]`.",
    "expected_points": 7,
    "ideal_answer_outline": "Use recursion or an iterative approach with a stack. If an element is an integer, add it to the result. If it's a list, recursively call the function or push its elements onto the stack. Handle variable nesting depth.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 363,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to reverse the words in a string. For example, 'hello world' becomes 'world hello'.",
    "expected_points": 4,
    "ideal_answer_outline": "Split the string into words. Reverse the array of words. Join the words back into a string. Handle multiple spaces and leading/trailing spaces.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 364,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Write a function to find the missing number in an array containing n distinct numbers taken from 0, 1, ..., n.",
    "expected_points": 3,
    "ideal_answer_outline": "Use the sum formula `(n*(n+1)/2)` and subtract the sum of the array's elements. Alternatively, use XOR: XOR all numbers from 0 to n and XOR all array elements. The result is the missing number. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 365,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a 'cat' command in C/C++ or a similar low-level language.",
    "expected_points": 8,
    "ideal_answer_outline": "Open the file. Read a chunk of data into a buffer. Write the buffer to standard output. Repeat until EOF. Handle file open errors, command-line arguments, and different file sizes.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 366,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Given two strings, write a function to check if one is a permutation of the other.",
    "expected_points": 4,
    "ideal_answer_outline": "Sort both strings and compare them. Or, use a character frequency count array/hash map for both strings and compare the counts. Time: O(n log n) or O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 367,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Implement a function to find if a given string contains all unique characters.",
    "expected_points": 3,
    "ideal_answer_outline": "Use a boolean array or hash set to track characters. Iterate through the string; if a character is already marked as seen, return false. Time: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 368,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Design and implement a system to check for syntax errors in a simplified programming language. Support 'for', 'if', and 'return' statements, as well as balanced parentheses and braces.",
    "expected_points": 8,
    "ideal_answer_outline": "Use a parser generator like ANTLR or write a recursive descent parser. Discuss syntax tree creation, tokenization, and validation of nested structures using a stack.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 369,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a system for a high-traffic social media service to handle a 'like' button.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss database schema, using a dedicated service for 'likes', handling eventual consistency, caching 'like' counts, and a message queue for async updates to avoid blocking the main service. Handle race conditions and double-clicking.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 370,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a web crawler. How would you handle politeness, duplication, and scalability?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss a distributed architecture with a job queue, worker pool, and a politeness scheduler. Use a hash set or Bloom filter for URL de-duplication. Address the use of proxies, a URL frontier, and storage of fetched content. Consider error handling.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 371,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a distributed key-value store. How would you handle data replication and consistency?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss consistent hashing for partitioning. Use a quorum-based replication model (N, W, R) for consistency. Explain vector clocks for conflict resolution. Mention gossip protocols for node discovery and failure detection. Use a write-ahead log for durability.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 372,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a chat application like WhatsApp. Focus on the messaging system and user presence.",
    "expected_points": 10,
    "ideal_answer_outline": "Use a WebSocket or persistent HTTP connection for real-time messaging. Discuss message queues for reliable delivery, message encryption (end-to-end), and handling offline messages. Detail user presence updates via heartbeats and pub/sub.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 373,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a video conference system. How would you handle peer-to-peer vs. server-based communication?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss WebRTC for peer-to-peer. For group calls, use a Selective Forwarding Unit (SFU) or Media Server (MCU). Address NAT traversal (STUN, TURN servers), video codec selection (VP9, H.264), and scalability. Mention a signaling server for session setup.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 374,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design a Google Drive-like file storage system. How would you handle concurrent access and versioning?",
    "expected_points": 7,
    "ideal_answer_outline": "Use a distributed file system like HDFS or S3. Discuss version control using timestamps or version IDs. Address concurrent writes with optimistic locking. Mention metadata storage in a distributed database and user permission management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 375,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online ticketing system for concerts. How would you prevent a race condition for ticket purchases?",
    "expected_points": 6,
    "ideal_answer_outline": "Use a message queue to serialize ticket purchase requests. Implement a database transaction with a lock on the ticket quantity. Discuss a separate service for seat reservation and expiration. Handle payment processing asynchronously.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 376,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a machine learning system to predict the price of a stock.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss data collection (historical prices, news), feature engineering, model selection (LSTMs, ARIMA), training pipeline, and deployment. Address backtesting, overfitting, and the non-deterministic nature of the stock market.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 377,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an API Gateway. What are its responsibilities?",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss responsibilities: request routing, authentication, rate limiting, and caching. Mention its role in abstracting backend services. Detail how it improves security, management, and scalability for microservices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 378,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a system for real-time fraud detection in financial transactions.",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a streaming architecture with a data ingestion layer (Kafka). Use a stream processor (Flink, Storm) to apply a rule engine and machine learning models in real-time. Address low latency, false positive rate, and the feedback loop for model retraining.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 379,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the difference between SQL and NoSQL databases. Give examples of when to use each.",
    "expected_points": 5,
    "ideal_answer_outline": "SQL: structured, relational, ACID properties (e.g., PostgreSQL, MySQL) - for complex queries, defined schema. NoSQL: unstructured, flexible schema, BASE properties (e.g., MongoDB, Cassandra) - for scalability, fast writes, big data.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 380,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the four pillars of OOP (Object-Oriented Programming). Provide a code example for each.",
    "expected_points": 6,
    "ideal_answer_outline": "Encapsulation: bundling data and methods. Abstraction: hiding implementation details. Inheritance: creating new classes from existing. Polymorphism: single interface for different types.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 381,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is the difference between a process and a thread? How do they communicate?",
    "expected_points": 7,
    "ideal_answer_outline": "Process: isolated, owns its memory space. Thread: lightweight, shares memory. Communication: IPC (pipes, message queues) for processes; shared memory, mutexes, condition variables for threads. Discuss context switching overhead.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 382,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain how a TCP connection is established and terminated. What is a SYN flood attack?",
    "expected_points": 5,
    "ideal_answer_outline": "Establishment: three-way handshake (SYN, SYN-ACK, ACK). Termination: four-way handshake (FIN, ACK, FIN, ACK). SYN flood: attacker sends SYN packets but never responds to SYN-ACK, leaving server resources tied up.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 383,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What are RESTful APIs? Name the core HTTP methods and their uses.",
    "expected_points": 4,
    "ideal_answer_outline": "REST: stateless, resource-based API architecture. HTTP methods: GET (retrieve), POST (create), PUT/PATCH (update), DELETE (delete).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 384,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of 'eventual consistency' in distributed systems.",
    "expected_points": 5,
    "ideal_answer_outline": "After a period with no new updates, all replicas of an object will converge to the same value. Explain the trade-off with strong consistency, use cases (social media, etc.), and how it relates to CAP theorem.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 385,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the difference between a monolith and a microservices architecture. When would you choose one over the other?",
    "expected_points": 8,
    "ideal_answer_outline": "Monolith: single, tightly-coupled application. Microservices: collection of small, independent services. Discuss pros (simplicity, easy deployment) and cons (tight coupling) of monoliths, and pros (scalability, technology freedom) and cons (complexity, operational overhead) of microservices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 386,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of a Bloom filter. How and when would you use one?",
    "expected_points": 6,
    "ideal_answer_outline": "A probabilistic data structure to test if an element is a member of a set. Discuss how it uses multiple hash functions and a bit array. It can have false positives but no false negatives. Use cases: preventing duplicate URLs in a web crawler, caching.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 387,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What is the difference between a shallow copy and a deep copy?",
    "expected_points": 3,
    "ideal_answer_outline": "Shallow copy: copies the top-level structure, but not nested objects. Deep copy: copies all nested objects recursively. Give a code example to demonstrate the difference.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 388,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain the concept of a distributed lock. How would you implement one using a distributed system?",
    "expected_points": 7,
    "ideal_answer_outline": "A mechanism to ensure that only one process can execute a piece of code at a time in a distributed environment. Discuss implementation using ZooKeeper, Redis, or a database with transactions. Address concerns like a 'stale' lock, deadlocks, and timeouts.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 389,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "What is a neural network? Explain the concepts of backpropagation and gradient descent.",
    "expected_points": 8,
    "ideal_answer_outline": "Neural network: a series of layers of interconnected nodes. Backpropagation: a method to calculate the gradient of the loss function with respect to the weights. Gradient descent: an optimization algorithm used to minimize the loss by iteratively adjusting the weights in the direction of the steepest descent.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 390,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Describe the different types of software testing and when you would use each.",
    "expected_points": 6,
    "ideal_answer_outline": "Unit testing: individual components. Integration testing: how components work together. End-to-end testing: user flow. Acceptance testing: business requirements. Performance testing: scalability and load. Regression testing: new code doesn't break old.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 391,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Easy",
    "question": "What is the difference between an inner join and a left outer join in SQL?",
    "expected_points": 3,
    "ideal_answer_outline": "Inner join: returns only rows that have matching values in both tables. Left outer join: returns all rows from the left table and the matched rows from the right table.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 392,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Hard",
    "question": "Explain the concept of garbage collection. What are the different types of garbage collectors?",
    "expected_points": 7,
    "ideal_answer_outline": "Garbage collection: a form of automatic memory management. Discuss 'mark-and-sweep', 'copying', and 'generational' collectors. Mention 'stop-the-world' pauses and how they are mitigated.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 393,
    "category": "Technical",
    "subcategory": "Domain-Specific",
    "difficulty": "Medium",
    "question": "Explain what a container is and the benefits of using them.",
    "expected_points": 5,
    "ideal_answer_outline": "A container is a lightweight, standalone, executable package of software that includes everything needed to run it. Benefits: portability, consistency across environments, resource efficiency, and simplified deployment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 394,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time when you were faced with a problem you couldn't solve on your own. What did you do?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: Specific technical challenge. Task: Your objective to solve it. Action: Describe how you sought help, consulted documentation, or collaborated with colleagues. Result: The successful resolution and what you learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 395,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a project you are most proud of. What was your specific contribution?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The project and its context. Task: Your role and responsibilities. Action: The key actions you took and technical decisions you made. Result: The measurable impact of your contribution and why it's a source of pride.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 396,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you received negative feedback. How did you handle it?",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: Honest feedback scenario. Task: Original objective. Action: What went wrong, recovery steps. Result: Specific learnings, how applied since.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 397,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give me an example of when you had to work with a difficult stakeholder. How did you manage the relationship?",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The stakeholder and the challenge. Task: Your objective for the relationship. Action: The specific communication strategies or compromises you made. Result: The positive outcome of your efforts.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 398,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a situation where you had to prioritize multiple projects with conflicting deadlines.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: Multiple urgent tasks. Task: All deliverables. Action: Prioritization framework, communication. Result: All priorities addressed, stakeholder satisfaction.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 399,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to take on a task that was outside of your comfort zone.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: The new task. Task: Your goal to complete it. Action: How you approached learning, sought mentorship, and managed your time. Result: The successful completion and what new skills you gained.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 400,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you had to make a decision without all the information you needed.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The incomplete information scenario. Task: A decision was needed. Action: How you gathered information, made assumptions, and communicated the risk to stakeholders. Result: The outcome of your decision and what you learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 401,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to deal with a conflict within your team.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The conflict and its cause. Task: Your role in resolving it. Action: The specific steps you took to mediate and find a resolution. Result: The positive outcome and how it improved team dynamics.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 402,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time when you influenced a technical decision without being the lead.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The technical decision. Task: Your goal to influence it. Action: The research you did, the data you presented, and the conversations you had. Result: The positive change that came from your influence.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 403,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you simplified a complex system or process.",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: The complex system. Task: Your objective to simplify it. Action: The specific steps you took to identify redundancies and streamline the process. Result: The measurable benefits of your simplification.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 404,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time when you anticipated a problem before it happened and took action to prevent it.",
    "expected_points": 8,
    "ideal_answer_outline": "Situation: The potential problem. Task: Your objective to prevent it. Action: The proactive steps you took to mitigate the risk. Result: The successful prevention of the issue and the impact it had.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 405,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you were forced to make a difficult trade-off on a project.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The trade-off. Task: Your goal to balance competing priorities. Action: The factors you considered, the stakeholders you consulted, and the final decision you made. Result: The outcome of the decision and lessons learned.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 406,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Tell me about a time you had to teach a complex technical concept to a non-technical audience.",
    "expected_points": 6,
    "ideal_answer_outline": "Situation: The complex concept and audience. Task: Your goal to communicate it effectively. Action: The methods you used (e.g., analogies, visual aids). Result: The audience's understanding and the project's success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 407,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Describe a time you demonstrated strong communication skills within a team.",
    "expected_points": 5,
    "ideal_answer_outline": "Situation: A communication challenge. Task: Your goal to improve communication. Action: The specific strategies you implemented (e.g., better documentation, regular updates). Result: A positive change in team collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 408,
    "category": "Behavioral",
    "subcategory": "STAR",
    "question": "Give an example of a time you had to persuade someone to change their mind on a technical matter.",
    "expected_points": 7,
    "ideal_answer_outline": "Situation: The disagreement. Task: Your goal to persuade. Action: The data, research, and collaborative discussions you used. Result: The change in opinion and the positive outcome for the project.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 409,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe your ideal team environment. What role do you typically play in a team?",
    "expected_points": 4,
    "ideal_answer_outline": "Discuss a culture of trust and open communication. Describe your role, whether it's a collaborator, problem-solver, or mentor. Provide a specific example of contributing to team success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 410,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle disagreements with a colleague on a technical decision?",
    "expected_points": 6,
    "ideal_answer_outline": "Focus on data and facts, not personal feelings. Discuss the importance of listening, understanding their perspective, and finding a consensus or a compromise. Provide a concrete example.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 411,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time you worked on a project where the team was underperforming. What did you do to help?",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on your contribution to improving the situation. Discuss how you identified the root cause, offered support, shared knowledge, or took on extra responsibilities to help the team succeed.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 412,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you ensure you are a productive and collaborative remote team member?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss proactive communication, clear documentation, regular check-ins, and being responsive. Provide examples of using tools and practices to stay connected and productive from a distance.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 413,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe a situation where you had to provide constructive criticism to a teammate. How did you do it?",
    "expected_points": 6,
    "ideal_answer_outline": "Focus on a specific, non-personal example. Discuss the importance of a private conversation, being specific with examples, and offering solutions. Mention how you ensured the feedback was well-received and acted upon.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 414,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time when you had to work with a team member who had a different work style than you.",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss your approach to understanding and adapting to different styles. Emphasize flexibility and communication. Provide an example of a successful collaboration.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 415,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you handle dependencies on other teams for your deliverables?",
    "expected_points": 6,
    "ideal_answer_outline": "Early identification, clear communication, SLAs, escalation paths, contingency planning, relationship building.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 416,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Tell me about a time when you had to work with a difficult team member.",
    "expected_points": 7,
    "ideal_answer_outline": "Professional approach, understanding root causes, direct communication, involving management when appropriate, maintaining productivity.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 417,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "How do you ensure your team maintains high code quality standards?",
    "expected_points": 6,
    "ideal_answer_outline": "Code review process, automated testing, linting rules, pair programming, documentation standards, continuous improvement.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 418,
    "category": "Behavioral",
    "subcategory": "Teamwork",
    "question": "Describe how you've contributed to improving team productivity or efficiency.",
    "expected_points": 6,
    "ideal_answer_outline": "Problem identification, solution proposal, implementation, measurement of impact, team buy-in, sustainable practices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 419,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you led a project without formal authority.",
    "expected_points": 7,
    "ideal_answer_outline": "Influence strategies, building consensus, motivation techniques, delegation, accountability without authority, project success.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 420,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you mentor junior developers on your team?",
    "expected_points": 6,
    "ideal_answer_outline": "Structured mentoring approach, goal setting, regular 1:1s, code reviews, growth opportunities, feedback delivery.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 421,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe a situation where you had to make a difficult technical decision with limited information.",
    "expected_points": 7,
    "ideal_answer_outline": "Risk assessment, gathering available data, consulting experts, decision framework, contingency planning, outcome evaluation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 422,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you drive technical innovation within your team?",
    "expected_points": 6,
    "ideal_answer_outline": "Creating safe spaces for experimentation, hackathons, POCs, staying current with trends, encouraging learning, celebrating failures.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 423,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you had to champion a controversial technical decision.",
    "expected_points": 7,
    "ideal_answer_outline": "Building the case, addressing concerns, stakeholder management, phased approach, success metrics, risk mitigation.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 424,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you identify and develop future leaders in your team?",
    "expected_points": 7,
    "ideal_answer_outline": "Potential indicators, stretch assignments, coaching, feedback, sponsorship, succession planning, growth tracking.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 425,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe your approach to setting technical direction for a team or project.",
    "expected_points": 7,
    "ideal_answer_outline": "Vision alignment, architecture decisions, technology choices, team input, documentation, evolution strategy, buy-in process.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 426,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Tell me about a time when you had to lead through a crisis or major incident.",
    "expected_points": 8,
    "ideal_answer_outline": "Incident response, clear communication, delegation, stakeholder management, post-mortem, process improvements, team morale.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 427,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "How do you balance technical excellence with business delivery pressures?",
    "expected_points": 7,
    "ideal_answer_outline": "Technical debt management, MVP approach, risk communication, negotiation, phased delivery, quality gates, stakeholder education.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 428,
    "category": "Behavioral",
    "subcategory": "Leadership",
    "question": "Describe how you've built or transformed an engineering culture.",
    "expected_points": 8,
    "ideal_answer_outline": "Current state assessment, vision setting, change management, measuring progress, overcoming resistance, sustainable practices.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 429,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time you successfully resolved a conflict with a teammate or colleague.",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss your approach to understanding the different perspectives, mediating, and finding a mutually agreeable solution. Focus on a specific situation and the positive outcome.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 430,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where a team member takes credit for your work?",
    "expected_points": 5,
    "ideal_answer_outline": "Discuss a calm, professional approach. Focus on direct communication with the teammate first, and then, if necessary, with a manager. Emphasize a solution-oriented mindset rather than one of blame.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 431,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to mediate a dispute between two of your colleagues.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss your role as a neutral third party. Focus on listening to both sides, identifying the root cause, and guiding them to a solution. Mention how you maintained a positive team environment.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 432,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you approach a situation where you disagree with a manager's decision?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a professional, respectful approach. Focus on understanding their rationale, presenting your own data-backed argument, and, if the decision stands, committing to it. Mention how you value open communication and trust.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 433,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time when you had to defend a technical decision to a non-technical audience who was strongly against it.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss how you translated technical concepts into business terms. Use analogies and data to support your position. Mention how you addressed their concerns and built trust to achieve a consensus.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 434,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to deal with a team member who was not pulling their weight.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a private conversation with the team member. Focus on understanding the issue from their perspective and collaboratively creating a plan to improve performance. If the issue persists, mention involving a manager with a clear, factual summary.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 435,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where a stakeholder's requirements are constantly changing?",
    "expected_points": 6,
    "ideal_answer_outline": "Discuss a proactive approach. Focus on clear communication, documenting changes, and managing expectations regarding scope and deadlines. Mention a structured process for handling change requests.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 436,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Describe a time when you had to work with a team with a toxic culture. What was your role in it?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss your ability to maintain professionalism and focus on your work. Mention how you tried to be a positive influence, offered support to colleagues, and, if necessary, escalated concerns to management.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 437,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you had to deal with a difficult client or customer.",
    "expected_points": 7,
    "ideal_answer_outline": "Focus on empathy and understanding their perspective. Discuss how you actively listened, de-escalated the situation, and worked to find a solution that met their needs while also being realistic.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 438,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "How do you handle a situation where you and your team are blamed for a problem that was not your fault?",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a calm, fact-based response. Focus on presenting a clear, objective account of events without blaming others. Mention a solution-oriented approach to fixing the problem, regardless of fault.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 439,
    "category": "Behavioral",
    "subcategory": "Conflict Resolution",
    "question": "Tell me about a time you successfully negotiated a difficult situation.",
    "expected_points": 7,
    "ideal_answer_outline": "Discuss a specific situation where you had to negotiate with a stakeholder or colleague. Focus on your preparation, your negotiation strategy, and how you found a solution that was beneficial to all parties. Mention the positive outcome and how it strengthened your relationships.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 440,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an array of integers, find the pair of elements that sums to a specific target.",
    "expected_points": 4,
    "ideal_answer_outline": "Use a hash set to store elements seen so far. Iterate through the array; for each number, check if the complement (target - number) is in the set. Time: O(n), Space: O(n).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 441,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given an `m x n` matrix, if an element is 0, set its entire row and column to 0. Do it in place.",
    "expected_points": 5,
    "ideal_answer_outline": "Use the first row and column as markers. Iterate through the matrix, if a cell is 0, mark its corresponding row and column. In a second pass, set rows and columns to 0 based on markers. Time: O(m*n), Space: O(1).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 442,
    "category": "Technical",
    "subcategory": "Algorithms",
    "difficulty": "Medium",
    "question": "Given a binary tree, find its maximum depth. Provide both recursive and iterative solutions.",
    "expected_points": 5,
    "ideal_answer_outline": "Recursive: DFS with max(left, right) + 1. Iterative: BFS with level counting. Time: O(n), Space: O(h).",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 443,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Easy",
    "question": "Given a binary tree, write a function to return its nodes in level-order traversal (i.e., from left to right, level by level).",
    "expected_points": 5,
    "ideal_answer_outline": "Use a queue for Breadth-First Search (BFS). Start with the root. While the queue is not empty, dequeue a node, add its value to the result, and enqueue its children. Use a marker or a counter for each level.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 444,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Medium",
    "question": "Write a function to implement a hash map from scratch. Use chaining to handle collisions.",
    "expected_points": 7,
    "ideal_answer_outline": "Define a hash function. Use an array for buckets. For chaining, each bucket holds a linked list. Discuss the importance of a good hash function and handling resizing. Operations are O(1) on average.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 445,
    "category": "Technical",
    "subcategory": "Coding",
    "difficulty": "Hard",
    "question": "Implement a producer-consumer system using a fixed-size buffer. Use locks and condition variables to ensure thread safety.",
    "expected_points": 9,
    "ideal_answer_outline": "Producer thread adds items to a queue. Consumer thread removes items. Use a mutex for mutual exclusion and two condition variables: one to signal when the queue is not full and one for when it is not empty. Discuss spurious wakeups.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 446,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a live streaming service like Twitch or YouTube Live. How would you handle low latency and high concurrency?",
    "expected_points": 10,
    "ideal_answer_outline": "Discuss a client-side encoder. Use RTMP/WebRTC for ingestion and HLS/DASH for delivery. Address content delivery networks (CDNs), edge servers, and a scalable architecture for handling millions of concurrent viewers. Mention chat, authentication, and moderation services.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 447,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Hard",
    "question": "Design a scalable news feed system. How would you generate personalized feeds for millions of users?",
    "expected_points": 9,
    "ideal_answer_outline": "Discuss fan-out approaches (fan-out on write vs. fan-out on read). Use a message queue for distributing posts. Address a timeline service for feed generation and a caching layer for performance. Mention a ranking algorithm for personalization. Discuss the celebrity problem and how to handle it.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  },
  {
    "question_id": 448,
    "category": "Technical",
    "subcategory": "System Design",
    "difficulty": "Medium",
    "question": "Design an online education platform. Focus on the course content delivery and student progress tracking.",
    "expected_points": 8,
    "ideal_answer_outline": "Discuss a microservice architecture. Use a content service for videos and documents, and a user service for progress. Mention using a database for course metadata and a distributed cache for user progress. Address video encoding and secure content delivery.",
    "companies": [
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "time_limit": 120,
    "hexagon_impact": {
      "technical_expertise": 5,
      "problem_solving": 5,
      "communication": 5
    }
  }
]
